<!-- Was generated by RESTPluginWizard -->
<editor>
<help>/commander/pages/@PLUGIN_NAME@/help?s=Administration&amp;ss=Plugins#GenerateTasksinAssignment</help>
<formElement>
  <documentation>Previously defined plugin configuration.</documentation>
  <label>Configuration name:</label>
  <property>config</property>
  <propertyReference>/plugins/@PLUGIN_NAME@/project/ec_plugin_cfgs</propertyReference>
  <required>1</required>
  <type>entry</type>
</formElement>
<formElement>
  <documentation>Assignment Id.</documentation>
  <label>Assignment Id:</label>
  <property>assignmentId</property>
  <required>1</required>
  <type>entry</type>
  <value></value>
</formElement>
<formElement>
  <documentation>Level.</documentation>
  <label>Level:</label>
  <property>level</property>
  <required>0</required>
  <type>entry</type>
  <value></value>
</formElement>
<formElement>
  <documentation>Required, see ISPW administrator for valid values.</documentation>
  <label>Runtime Configuration:</label>
  <property>runtimeConfiguration</property>
  <required>1</required>
  <type>entry</type>
  <value></value>
</formElement>
<formElement>
  <documentation>Optional, global custom headers used for all callbacks. Use &quot;Header=Value&quot; format.</documentation>
  <label>HTTP Headers in format: &quot;Header=Value&quot;:</label>
  <property>httpHeaders</property>
  <required>0</required>
  <type>textarea</type>
  <value></value>
</formElement>
<formElement>
  <attachedAsParameterToStep>generate tasks in assignment</attachedAsParameterToStep>
  <documentation>Optional, global credentials used for all callbacks.</documentation>
  <label>Global Credentials for Callbacks:</label>
  <property>callbackCredential</property>
  <required>0</required>
  <type>credential</type>
  <value></value>
</formElement>
<formElement>
  <documentation>The type of callback to use: this determines where the propery used for the callback lives. Set this to the appropriate value for the context in which you are calling the procedure, or else set it to 'custom' and supply a JSON event array.</documentation>
  <label>Callback Type:</label>
  <option>
    <name>job</name>
    <value>job</value>
  </option>
  <option>
    <name>flow</name>
    <value>flow</value>
  </option>
  <option>
    <name>pipeline</name>
    <value>pipeline</value>
  </option>
  <option>
    <name>custom</name>
    <value>custom</value>
  </option>
  <property>callbackType</property>
  <required>1</required>
  <type>select</type>
  <value>job</value>
</formElement>
<formElement>
  <documentation>The type of callback to use: this determines where the propery used for the callback lives. Set this to the appropriate value for the context in which you are calling the procedure, or else set it to 'custom' and supply a JSON event array.</documentation>
  <label>Callback Type:</label>
  <option>
    <name>job</name>
    <value>job</value>
  </option>
  <option>
    <name>flow</name>
    <value>flow</value>
  </option>
  <option>
    <name>pipeline</name>
    <value>pipeline</value>
  </option>
  <option>
    <name>custom</name>
    <value>custom</value>
  </option>
  <property>callbackType</property>
  <required>1</required>
  <type>select</type>
  <value>job</value>
</formElement>
<formElement>
  <documentation>Event array, must contain at least 1 member. Uses JSON format, described at ISPW API Guide. Ignored unless Callback Type is 'custom'.</documentation>
  <label>Event array in JSON format, must contain at least 1 member.:</label>
  <property>events</property>
  <required>0</required>
  <type>textarea</type>
  <value></value>
</formElement>
<formElement>
  <documentation>Results will be saved into this property/property sheet.</documentation>
  <label>Property sheet name for results:</label>
  <property>resultPropertySheet</property>
  <required>1</required>
  <type>entry</type>
  <value>/myJob/generateAssignmentTasks</value>
</formElement>
<formElement>
  <documentation>Format to save request results.</documentation>
  <label>Result format:</label>
  <option>
    <name>json</name>
    <value>json</value>
  </option>
  <option>
    <name>propertySheet</name>
    <value>propertySheet</value>
  </option>
  <property>resultFormat</property>
  <required>1</required>
  <type>select</type>
</formElement>

</editor>