{
   "options" : {
      "noEmptyString" : "true"
   },
   "Create release" : {
      "resultProperty" : {
         "show" : "true",
         "format" : [
            "json",
            "propertySheet"
         ],
         "default" : "/myJob/release"
      },
      "name" : "Create Release",
      "description" : "Creates a Release.",
      "stepName" : "Create release",
      "bodyContentType" : "json",
      "canSkipAuth" : "false",
      "parameters" : [
         {
            "required" : "1",
            "in" : "body",
            "documentation" : "Application name for the release.",
            "label" : "Application",
            "type" : "entry",
            "property" : "application"
         },
         {
            "required" : "1 #### TODO Is this optional?",
            "in" : "body",
            "documentation" : "Stream name for the application.",
            "label" : "Stream",
            "type" : "entry",
            "property" : "stream"
         },
         {
            "required" : "1",
            "in" : "body",
            "documentation" : "Release description.",
            "label" : "Description",
            "type" : "entry",
            "property" : "description"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, can only be used if releasePrefix is not set, one must be used. #### TODO Is this still optional?",
            "label" : "Release ID",
            "type" : "entry",
            "property" : "releaseId"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Oprional, ? #### TODO",
            "label" : "Release Preference",
            "type" : "entry",
            "property" : "releasePreference #### TODO If this a typo in the documentation for releasePrefix?"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, owner.",
            "label" : "Owner",
            "type" : "entry",
            "property" : "_owner"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, work reference number.",
            "label" : "Work Reference Number",
            "type" : "entry",
            "property" : "workRefNumber"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, message.",
            "label" : "Message",
            "type" : "entry",
            "property" : "message"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, user tag.",
            "label" : "User Tag",
            "type" : "entry",
            "property" : "userTag"
         }
      ],
      "fields" : [
         "application",
         "stream",
         "description",
         "releaseId",
         "releasePreference #### TODO If this a typo in the documentation for releasePrefix?",
         "_owner",
         "workRefNumber",
         "message",
         "userTag"
      ],
      "hasConfig" : "true",
      "basicAuth" : "false",
      "method" : "POST",
      "endpoint" : "#{{instance}}/ispw/#{{srid}}/releases",
      "attachCredentials" : "true"
   },
   "Deploy assignment" : {
      "resultProperty" : {
         "show" : "true",
         "format" : [
            "json",
            "propertySheet"
         ],
         "default" : "/myJob/deployResult"
      },
      "name" : "Deploy Assignment",
      "description" : "Deploys an Assignment.",
      "stepName" : "Deploy assignment",
      "bodyContentType" : "json",
      "canSkipAuth" : "false",
      "parameters" : [
         {
            "required" : "1",
            "documentation" : "Assignment ID",
            "label" : "Assignment ID",
            "type" : "entry",
            "property" : "assignmentId"
         },
         {
            "required" : "1",
            "in" : "query",
            "documentation" : "Level.",
            "label" : "Level",
            "type" : "entry",
            "property" : "level"
         },
         {
            "required" : "0",
            "value" : "S",
            "in" : "body",
            "documentation" : "Optional, S for standard, I for incidental, or E for emergency. Default value of S",
            "option" : [
               {
                  "value" : "S",
                  "name" : "Standard (S)"
               },
               {
                  "value" : "I",
                  "name" : "Incidental (I)"
               },
               {
                  "value" : "E",
                  "name" : "Emergency (E)"
               }
            ],
            "label" : "Change Type",
            "type" : "select",
            "property" : "changeType"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I",
            "option" : [
               {
                  "value" : "I",
                  "name" : "Immediate (I)"
               },
               {
                  "value" : "H",
                  "name" : "Hold (H)"
               }
            ],
            "label" : "Execution Status",
            "type" : "select",
            "property" : "executionStatus"
         },
         {
            "required" : "1",
            "in" : "body",
            "documentation" : "Required, see ISPW administrator for valid values",
            "label" : "Runtime Configuration",
            "type" : "entry",
            "property" : "runtimeConfig"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, deploy active date.",
            "label" : "Deploy Active Date",
            "type" : "entry",
            "property" : "deployActiveDate"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, deploy active time.",
            "label" : "Deploy Active Time",
            "type" : "entry",
            "property" : "deployActiveTime"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, deploy implementation date.",
            "label" : "Deploy Implementation Date",
            "type" : "entry",
            "property" : "deployImplementationDate"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, deploy implementation time.",
            "label" : "Deploy Implementation Time",
            "type" : "entry",
            "property" : "deployImplementationTime"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, allows you to override the Environments configured for Deploy at that level. If you wish to Deploy to only certain Environments, you can list them here.",
            "label" : "Deploy Environment List",
            "type" : "entry",
            "property" : "dpenvlst"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, allows you to specify a specific System for the Deploy.",
            "label" : "System",
            "type" : "entry",
            "property" : "system"
         },
         {
            "required" : "0",
            "documentation" : "Optional, global custom headers used for all callbacks. Use \"Header=Value\" format.",
            "label" : "HTTP Headers in format: \"Header=Value\"",
            "type" : "textarea",
            "property" : "httpHeaders"
         },
         {
            "required" : "0",
            "documentation" : "Optional, global overide credentials used for all callbacks",
            "type" : "credential",
            "label" : "Global Credentials for Callbacks",
            "property" : "callbackCredential"
         },
         {
            "required" : "0",
            "expansionDeferred" : "true",
            "documentation" : "Optional, event callback array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).",
            "label" : "Event Callback Array for Asynchronous Callback",
            "type" : "textarea",
            "property" : "eventCallbacks"
         }
      ],
      "fields" : [
         "assignmentId",
         "level",
         "changeType",
         "executionStatus",
         "runtimeConfig",
         "deployActiveDate",
         "deployActiveTime",
         "deployImplementationDate",
         "deployImplementationTime",
         "dpenvlst",
         "system",
         "httpHeaders",
         "callbackCredential",
         "eventCallbacks"
      ],
      "hasConfig" : "true",
      "basicAuth" : "false",
      "method" : "POST",
      "endpoint" : "#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/tasks/deploy",
      "attachCredentials" : "true"
   },
   "Generate tasks in assignment" : {
      "resultProperty" : {
         "show" : "true",
         "format" : [
            "json",
            "propertySheet"
         ],
         "default" : "/myJob/generateAssignmentTasks"
      },
      "name" : "Generate Tasks in Assignment",
      "description" : "Runs generate for the Tasks in Assignment.",
      "stepName" : "Generate tasks in assignment",
      "bodyContentType" : "json",
      "canSkipAuth" : "false",
      "parameters" : [
         {
            "required" : "1",
            "documentation" : "Assignment Id.",
            "label" : "Assignment Id",
            "type" : "entry",
            "property" : "assignmentId"
         },
         {
            "noEmptyString" : "true",
            "required" : "1",
            "in" : "query",
            "documentation" : "Level.",
            "label" : "Level",
            "type" : "entry",
            "property" : "level"
         },
         {
            "required" : "0",
            "value" : "S",
            "in" : "body",
            "documentation" : "Optional, S for standard, I for incidental, or E for emergency. Default value of S",
            "option" : [
               {
                  "value" : "S",
                  "name" : "Standard (S)"
               },
               {
                  "value" : "I",
                  "name" : "Incidental (I)"
               },
               {
                  "value" : "E",
                  "name" : "Emergency (E)"
               }
            ],
            "label" : "Change Type",
            "type" : "select",
            "property" : "changeType #### TODO Is this ignored?"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I",
            "option" : [
               {
                  "value" : "I",
                  "name" : "Immediate (I)"
               },
               {
                  "value" : "H",
                  "name" : "Hold (H)"
               }
            ],
            "label" : "Execution Status",
            "type" : "select",
            "property" : "execStat #### TODO Is this ignored?"
         },
         {
            "required" : "1",
            "in" : "body",
            "documentation" : "Required, see ISPW administrator for valid values.",
            "label" : "Runtime Config",
            "type" : "entry",
            "property" : "runtimeConfig"
         },
         {
            "checkedValue" : "true",
            "value" : "false",
            "uncheckedValue" : "false",
            "initiallyChecked" : "0",
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, if checked, this will use the automatic deploy if that has been set up by the ISPW administrator, otherwise it defaults to not doing auto-deploy.",
            "type" : "checkbox",
            "label" : "Auto-Deploy",
            "property" : "autoDeploy"
         },
         {
            "required" : "0",
            "documentation" : "Optional, global custom headers used for all callbacks. Use \"Header=Value\" format.",
            "label" : "HTTP Headers in format: \"Header=Value\"",
            "type" : "textarea",
            "property" : "httpHeaders"
         },
         {
            "required" : "0",
            "documentation" : "Optional, global overide credentials used for all callbacks",
            "type" : "credential",
            "label" : "Global Credentials for Callbacks",
            "property" : "callbackCredential"
         },
         {
            "required" : "0",
            "expansionDeferred" : "true",
            "documentation" : "Optional, event callback array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).",
            "label" : "Event Callback Array for Asynchronous Callback",
            "type" : "textarea",
            "property" : "eventCallbacks"
         }
      ],
      "fields" : [
         "assignmentId",
         "level",
         "changeType #### TODO Is this ignored?",
         "execStat #### TODO Is this ignored?",
         "runtimeConfig",
         "autoDeploy",
         "httpHeaders",
         "callbackCredential",
         "eventCallbacks"
      ],
      "hasConfig" : "true",
      "basicAuth" : "false",
      "method" : "POST",
      "endpoint" : "#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/tasks/generate",
      "attachCredentials" : "true"
   },
   "Get assignment task information" : {
      "resultProperty" : {
         "show" : "true",
         "format" : [
            "json",
            "propertySheet"
         ],
         "default" : "/myJob/assignmentTask"
      },
      "name" : "Get Assignment Task Information",
      "description" : "Retrieves information about a Task in an Assignment.",
      "stepName" : "Get assignment task information",
      "bodyContentType" : "json",
      "canSkipAuth" : "true",
      "parameters" : [
         {
            "required" : "1",
            "documentation" : "Assignment Id.",
            "label" : "Assignment Id",
            "type" : "entry",
            "property" : "assignmentId"
         },
         {
            "required" : "1",
            "documentation" : "Task Id.",
            "label" : "Task Id",
            "type" : "entry",
            "property" : "taskId"
         }
      ],
      "fields" : [
         "assignmentId",
         "taskId"
      ],
      "hasConfig" : "true",
      "basicAuth" : "false",
      "method" : "GET",
      "endpoint" : "#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/tasks/#{taskId}",
      "attachCredentials" : "true"
   },
   "Load task" : {
      "resultProperty" : {
         "show" : "true",
         "format" : [
            "json",
            "propertySheet"
         ],
         "default" : "/myJob/loadTask"
      },
      "name" : "Load Task",
      "description" : "Loads a Task for the specified Assignment.",
      "stepName" : "Load task",
      "bodyContentType" : "json",
      "canSkipAuth" : "true",
      "parameters" : [
         {
            "required" : "1",
            "documentation" : "Assignment id.",
            "label" : "Assignment Id",
            "type" : "entry",
            "property" : "assignmentId"
         },
         {
            "required" : "1",
            "in" : "body",
            "documentation" : "Stream name.",
            "label" : "Stream Name",
            "type" : "entry",
            "property" : "stream"
         },
         {
            "required" : "1",
            "in" : "body",
            "documentation" : "ISPW application id.",
            "label" : "Application ID",
            "type" : "entry",
            "property" : "application"
         },
         {
            "required" : "1",
            "in" : "body",
            "documentation" : "Module name.",
            "label" : "Module Name",
            "type" : "entry",
            "property" : "moduleName"
         },
         {
            "required" : "1",
            "in" : "body",
            "documentation" : "Module type.",
            "label" : "Module Type",
            "type" : "entry",
            "property" : "moduleType"
         },
         {
            "required" : "1",
            "in" : "body",
            "documentation" : "Current level.",
            "label" : "Current Level",
            "type" : "entry",
            "property" : "currentLevel"
         },
         {
            "required" : "1",
            "in" : "body",
            "documentation" : "Starting level.",
            "label" : "Starting Level",
            "type" : "entry",
            "property" : "startingLevel"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, generate sequence.",
            "label" : "Generate Sequence",
            "type" : "entry",
            "property" : "generateSequence"
         },
         {
            "checkedValue" : "true",
            "value" : "false",
            "uncheckedValue" : "false",
            "initiallyChecked" : "0",
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, SQL.",
            "type" : "checkbox",
            "label" : "SQL",
            "property" : "sql"
         },
         {
            "checkedValue" : "true",
            "value" : "false",
            "uncheckedValue" : "false",
            "initiallyChecked" : "0",
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, IMS.",
            "type" : "checkbox",
            "label" : "IMS",
            "property" : "ims"
         },
         {
            "checkedValue" : "true",
            "value" : "false",
            "uncheckedValue" : "false",
            "initiallyChecked" : "0",
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, CICS.",
            "type" : "checkbox",
            "label" : "CICS",
            "property" : "cics"
         },
         {
            "checkedValue" : "true",
            "value" : "false",
            "uncheckedValue" : "false",
            "initiallyChecked" : "0",
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, program.",
            "type" : "checkbox",
            "label" : "Program",
            "property" : "program"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, option 1.",
            "label" : "Option 1",
            "type" : "entry",
            "property" : "option1"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, option 2.",
            "label" : "Option 2",
            "type" : "entry",
            "property" : "option2"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, Option 3.",
            "label" : "Option 3",
            "type" : "entry",
            "property" : "option3"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, option 4.",
            "label" : "Option 4",
            "type" : "entry",
            "property" : "option4"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, option 5.",
            "label" : "Option 5",
            "type" : "entry",
            "property" : "option5"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, action.",
            "label" : "Action",
            "type" : "entry",
            "property" : "action"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, alternate name.",
            "label" : "Alternate Name",
            "type" : "entry",
            "property" : "alternateName"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, base version.",
            "label" : "Base Version",
            "type" : "entry",
            "property" : "baseVersion"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, internal version.",
            "label" : "Internal Version",
            "type" : "entry",
            "property" : "internalVersion"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, replace version.",
            "label" : "Replace Version",
            "type" : "entry",
            "property" : "replaceVersion"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, version.",
            "label" : "Version",
            "type" : "entry",
            "property" : "version"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, clazz.",
            "label" : "Clazz",
            "type" : "entry",
            "property" : "clazz"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, container.",
            "label" : "Container",
            "type" : "entry",
            "property" : "container"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, date-time.",
            "label" : "Date-Time",
            "type" : "entry",
            "property" : "dateTime"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, environment.",
            "label" : "Environment",
            "type" : "entry",
            "property" : "environment"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, extension.",
            "label" : "Extension",
            "type" : "entry",
            "property" : "extension"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, flags.",
            "label" : "Flags",
            "type" : "entry",
            "property" : "flags"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, level.",
            "label" : "Level",
            "type" : "entry",
            "property" : "level"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, message.",
            "label" : "Message",
            "type" : "entry",
            "property" : "message"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, operation.",
            "label" : "Operation",
            "type" : "entry",
            "property" : "operation"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, release.",
            "label" : "Release",
            "type" : "entry",
            "property" : "release"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, set.",
            "label" : "Set",
            "type" : "entry",
            "property" : "set"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, status.",
            "label" : "Status",
            "type" : "entry",
            "property" : "status"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, taskId.",
            "label" : "Task Id",
            "type" : "entry",
            "property" : "taskId"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, URL.",
            "label" : "URL",
            "type" : "entry",
            "property" : "url"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, use id.",
            "label" : "User Id",
            "type" : "entry",
            "property" : "userId"
         }
      ],
      "fields" : [
         "assignmentId",
         "stream",
         "application",
         "moduleName",
         "moduleType",
         "currentLevel",
         "startingLevel",
         "generateSequence",
         "sql",
         "ims",
         "cics",
         "program",
         "option1",
         "option2",
         "option3",
         "option4",
         "option5",
         "action",
         "alternateName",
         "baseVersion",
         "internalVersion",
         "replaceVersion",
         "version",
         "clazz",
         "container",
         "dateTime",
         "environment",
         "extension",
         "flags",
         "level",
         "message",
         "operation",
         "release",
         "set",
         "status",
         "taskId",
         "url",
         "userId"
      ],
      "hasConfig" : "true",
      "basicAuth" : "false",
      "method" : "POST",
      "endpoint" : "#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/tasks",
      "attachCredentials" : "true"
   },
   "Get set information" : {
      "resultProperty" : {
         "show" : "true",
         "format" : [
            "json",
            "propertySheet"
         ],
         "default" : "/myJob/setInfo"
      },
      "name" : "Get Set Information",
      "description" : "Retrieves information about a Set.",
      "stepName" : "Get set information",
      "bodyContentType" : "json",
      "canSkipAuth" : "false",
      "parameters" : [
         {
            "required" : "1",
            "documentation" : "Set ID",
            "label" : "Set ID",
            "type" : "entry",
            "property" : "setId"
         }
      ],
      "fields" : [
         "setId"
      ],
      "hasConfig" : "true",
      "basicAuth" : "false",
      "method" : "GET",
      "endpoint" : "#{{instance}}/ispw/#{{srid}}/sets/#{setId}",
      "attachCredentials" : "true"
   },
   "Get assignment task list" : {
      "resultProperty" : {
         "show" : "true",
         "format" : [
            "json",
            "propertySheet"
         ],
         "default" : "/myJob/assignmentTasks"
      },
      "name" : "Get Assignment Task List",
      "description" : "Retrieves the Task list for an Assignment.",
      "stepName" : "Get assignment task list",
      "bodyContentType" : "json",
      "canSkipAuth" : "true",
      "parameters" : [
         {
            "required" : "1",
            "documentation" : "Assignment Id.",
            "label" : "Assignment Id",
            "type" : "entry",
            "property" : "assignmentId"
         },
         {
            "required" : "0",
            "in" : "query",
            "documentation" : "Optional, level.",
            "label" : "Level",
            "type" : "entry",
            "property" : "level"
         }
      ],
      "fields" : [
         "assignmentId",
         "level"
      ],
      "hasConfig" : "true",
      "basicAuth" : "false",
      "method" : "GET",
      "endpoint" : "#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/tasks",
      "attachCredentials" : "true"
   },
   "Create assignment" : {
      "resultProperty" : {
         "show" : "true",
         "format" : [
            "json",
            "propertySheet"
         ],
         "default" : "/myJob/createAssignment"
      },
      "name" : "Create Assignment",
      "description" : "Creates an Assignment.",
      "stepName" : "Create assignment",
      "bodyContentType" : "json",
      "canSkipAuth" : "false",
      "parameters" : [
         {
            "required" : "1",
            "in" : "body",
            "documentation" : "Stream name.",
            "label" : "Stream Name",
            "type" : "entry",
            "property" : "stream"
         },
         {
            "required" : "1",
            "in" : "body",
            "documentation" : "ISPW Application Id.",
            "label" : "Application ID",
            "type" : "entry",
            "property" : "application"
         },
         {
            "required" : "1",
            "in" : "body",
            "documentation" : "Default Path.",
            "label" : "Default Path",
            "type" : "entry",
            "property" : "defaultPath"
         },
         {
            "required" : "1",
            "in" : "body",
            "documentation" : "Assignment description.",
            "label" : "Description",
            "type" : "entry",
            "property" : "description"
         },
         {
            "required" : "1",
            "in" : "body",
            "documentation" : "Owner.",
            "label" : "Owner",
            "type" : "entry",
            "property" : "_owner"
         },
         {
            "required" : "1",
            "in" : "body",
            "documentation" : "Assignment prefix.",
            "label" : "Assignment Prefix",
            "type" : "entry",
            "property" : "assignmentPrefix"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, ref number.",
            "label" : "Ref Number",
            "type" : "entry",
            "property" : "refNumber"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, release.",
            "label" : "Release",
            "type" : "entry",
            "property" : "release"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, user tag.",
            "label" : "User Tag",
            "type" : "entry",
            "property" : "userTag"
         }
      ],
      "fields" : [
         "stream",
         "application",
         "defaultPath",
         "description",
         "_owner",
         "assignmentPrefix",
         "refNumber",
         "release",
         "userTag"
      ],
      "hasConfig" : "true",
      "basicAuth" : "false",
      "method" : "POST",
      "endpoint" : "#{{instance}}/ispw/#{{srid}}/assignments",
      "attachCredentials" : "true"
   },
   "Get release information" : {
      "resultProperty" : {
         "show" : "true",
         "format" : [
            "json",
            "propertySheet"
         ],
         "default" : "/myJob/releaseInfo"
      },
      "name" : "Get Release Information",
      "description" : "Retrieves information about a Release.",
      "stepName" : "Get release information",
      "bodyContentType" : "json",
      "canSkipAuth" : "false",
      "parameters" : [
         {
            "required" : "1",
            "documentation" : "Release ID.",
            "label" : "Release ID",
            "type" : "entry",
            "property" : "releaseId"
         }
      ],
      "fields" : [
         "releaseId"
      ],
      "hasConfig" : "true",
      "basicAuth" : "false",
      "method" : "GET",
      "endpoint" : "#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}",
      "attachCredentials" : "true"
   },
   "Get assignment information" : {
      "resultProperty" : {
         "show" : "true",
         "format" : [
            "json",
            "propertySheet"
         ],
         "default" : "/myJob/assignment"
      },
      "name" : "Get Assignment Information",
      "description" : "Retrieves information about an Assignment.",
      "stepName" : "Get assignment information",
      "bodyContentType" : "json",
      "canSkipAuth" : "true",
      "parameters" : [
         {
            "required" : "1",
            "documentation" : "Assignment Id.",
            "label" : "Assignment Id",
            "type" : "entry",
            "property" : "assignmentId"
         }
      ],
      "fields" : [
         "assignmentId"
      ],
      "hasConfig" : "true",
      "basicAuth" : "false",
      "method" : "GET",
      "endpoint" : "#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/",
      "attachCredentials" : "true"
   },
   "Promote release" : {
      "resultProperty" : {
         "show" : "true",
         "format" : [
            "json",
            "propertySheet"
         ],
         "default" : "/myJob/promoteResult"
      },
      "name" : "Promote Release",
      "description" : "Promotes a Release.",
      "stepName" : "Promote release",
      "bodyContentType" : "json",
      "canSkipAuth" : "false",
      "parameters" : [
         {
            "required" : "1",
            "documentation" : "Release ID",
            "label" : "Release ID",
            "type" : "entry",
            "property" : "releaseId"
         },
         {
            "required" : "1",
            "in" : "query",
            "documentation" : "Release level.",
            "label" : "Level",
            "type" : "entry",
            "property" : "level"
         },
         {
            "required" : "0",
            "value" : "S",
            "in" : "body",
            "documentation" : "Optional, S for standard, I for incidental, or E for emergency. Default value of S",
            "option" : [
               {
                  "value" : "S",
                  "name" : "Standard (S)"
               },
               {
                  "value" : "I",
                  "name" : "Incidental (I)"
               },
               {
                  "value" : "E",
                  "name" : "Emergency (E)"
               }
            ],
            "label" : "Change Type",
            "type" : "select",
            "property" : "changeType"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I",
            "option" : [
               {
                  "value" : "I",
                  "name" : "Immediate (I)"
               },
               {
                  "value" : "H",
                  "name" : "Hold (H)"
               }
            ],
            "label" : "Execution Status",
            "type" : "select",
            "property" : "executionStatus"
         },
         {
            "required" : "1",
            "in" : "body",
            "documentation" : "Required, see ISPW administrator for valid values",
            "label" : "Runtime Configuration",
            "type" : "entry",
            "property" : "runtimeConfig"
         },
         {
            "checkedValue" : "true",
            "value" : "false",
            "uncheckedValue" : "false",
            "initiallyChecked" : "0",
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, if checked, this will use the automatic deploy if that has been set up by the ISPW administrator, otherwise it defaults to not doing auto-deploy.",
            "type" : "checkbox",
            "label" : "Auto-Deploy",
            "property" : "autoDeploy"
         },
         {
            "required" : "0",
            "documentation" : "Optional, global custom headers used for all callbacks. Use \"Header=Value\" format.",
            "label" : "HTTP Headers in format: \"Header=Value\"",
            "type" : "textarea",
            "property" : "httpHeaders"
         },
         {
            "required" : "0",
            "documentation" : "Optional, global overide credentials used for all callbacks",
            "type" : "credential",
            "label" : "Global Credentials for Callbacks",
            "property" : "callbackCredential"
         },
         {
            "required" : "0",
            "expansionDeferred" : "true",
            "documentation" : "Optional, event callback array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).",
            "label" : "Event Callback Array for Asynchronous Callback",
            "type" : "textarea",
            "property" : "eventCallbacks"
         }
      ],
      "fields" : [
         "releaseId",
         "level",
         "changeType",
         "executionStatus",
         "runtimeConfig",
         "autoDeploy",
         "httpHeaders",
         "callbackCredential",
         "eventCallbacks"
      ],
      "hasConfig" : "true",
      "basicAuth" : "false",
      "method" : "POST",
      "endpoint" : "#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}/tasks/promote",
      "attachCredentials" : "true"
   },
   "Generate tasks in release" : {
      "resultProperty" : {
         "show" : "true",
         "format" : [
            "json",
            "propertySheet"
         ],
         "default" : "/myJob/generateReleaseTasks"
      },
      "name" : "Generate Tasks in Release",
      "description" : "Runs generate for the Tasks in Release.",
      "stepName" : "Generate tasks in release",
      "bodyContentType" : "json",
      "canSkipAuth" : "false",
      "parameters" : [
         {
            "required" : "1",
            "documentation" : "Release ID",
            "label" : "Release ID",
            "type" : "entry",
            "property" : "releaseId"
         },
         {
            "noEmptyString" : "true",
            "required" : "1",
            "in" : "query",
            "documentation" : "Level.",
            "label" : "Level",
            "type" : "entry",
            "property" : "level"
         },
         {
            "required" : "0",
            "value" : "S",
            "in" : "body",
            "documentation" : "Optional, S for standard, I for incidental, or E for emergency. Default value of S",
            "option" : [
               {
                  "value" : "S",
                  "name" : "Standard (S)"
               },
               {
                  "value" : "I",
                  "name" : "Incidental (I)"
               },
               {
                  "value" : "E",
                  "name" : "Emergency (E)"
               }
            ],
            "label" : "Change Type",
            "type" : "select",
            "property" : "changeType #### TODO Is this ignored?"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I",
            "option" : [
               {
                  "value" : "I",
                  "name" : "Immediate (I)"
               },
               {
                  "value" : "H",
                  "name" : "Hold (H)"
               }
            ],
            "label" : "Execution Status",
            "type" : "select",
            "property" : "execStat #### TODO Is this ignored?"
         },
         {
            "required" : "1",
            "in" : "body",
            "documentation" : "Required, see ISPW administrator for valid values.",
            "label" : "Runtime Configuration",
            "type" : "entry",
            "property" : "runtimeConfig"
         },
         {
            "required" : "0",
            "documentation" : "Optional, global custom headers used for all callbacks. Use \"Header=Value\" format.",
            "label" : "HTTP Headers in format: \"Header=Value\"",
            "type" : "textarea",
            "property" : "httpHeaders"
         },
         {
            "required" : "0",
            "documentation" : "Optional, global overide credentials used for all callbacks",
            "type" : "credential",
            "label" : "Global Credentials for Callbacks",
            "property" : "callbackCredential"
         },
         {
            "required" : "0",
            "expansionDeferred" : "true",
            "documentation" : "Optional, event callback array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).",
            "label" : "Event Callback Array for Asynchronous Callback",
            "type" : "textarea",
            "property" : "eventCallbacks"
         }
      ],
      "fields" : [
         "releaseId",
         "level",
         "changeType #### TODO Is this ignored?",
         "execStat #### TODO Is this ignored?",
         "runtimeConfig",
         "httpHeaders",
         "callbackCredential",
         "eventCallbacks"
      ],
      "hasConfig" : "true",
      "basicAuth" : "false",
      "method" : "POST",
      "endpoint" : "#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}/tasks/generate",
      "attachCredentials" : "true"
   },
   "Get release task information" : {
      "resultProperty" : {
         "show" : "true",
         "format" : [
            "json",
            "propertySheet"
         ],
         "default" : "/myJob/releaseTask"
      },
      "name" : "Get Release Task Information",
      "description" : "Retrieves information about a Task in a Release.",
      "stepName" : "Get release task information",
      "bodyContentType" : "json",
      "canSkipAuth" : "true",
      "parameters" : [
         {
            "required" : "1",
            "documentation" : "Release ID",
            "label" : "Release ID",
            "type" : "entry",
            "property" : "releaseId"
         },
         {
            "required" : "1",
            "documentation" : "Task Id.",
            "label" : "Task Id",
            "type" : "entry",
            "property" : "taskId"
         }
      ],
      "fields" : [
         "releaseId",
         "taskId"
      ],
      "hasConfig" : "true",
      "basicAuth" : "false",
      "method" : "GET",
      "endpoint" : "#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}/tasks/#{taskId}",
      "attachCredentials" : "true"
   },
   "Promote assignment" : {
      "resultProperty" : {
         "show" : "true",
         "format" : [
            "json",
            "propertySheet"
         ],
         "default" : "/myJob/promoteResult"
      },
      "name" : "Promote Assignment",
      "description" : "Promotes an Assignment.",
      "stepName" : "Promote assignment",
      "bodyContentType" : "json",
      "canSkipAuth" : "false",
      "parameters" : [
         {
            "required" : "1",
            "documentation" : "Assignment ID",
            "label" : "Assignment ID",
            "type" : "entry",
            "property" : "assignmentId"
         },
         {
            "required" : "1",
            "in" : "query",
            "documentation" : "Level.",
            "label" : "Level",
            "type" : "entry",
            "property" : "level"
         },
         {
            "required" : "0",
            "value" : "S",
            "in" : "body",
            "documentation" : "Optional, S for standard, I for incidental, or E for emergency. Default value of S",
            "option" : [
               {
                  "value" : "S",
                  "name" : "Standard (S)"
               },
               {
                  "value" : "I",
                  "name" : "Incidental (I)"
               },
               {
                  "value" : "E",
                  "name" : "Emergency (E)"
               }
            ],
            "label" : "Change Type",
            "type" : "select",
            "property" : "changeType"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I",
            "option" : [
               {
                  "value" : "I",
                  "name" : "Immediate (I)"
               },
               {
                  "value" : "H",
                  "name" : "Hold (H)"
               }
            ],
            "label" : "Execution Status",
            "type" : "select",
            "property" : "executionStatus"
         },
         {
            "required" : "1",
            "in" : "body",
            "documentation" : "Required, see ISPW administrator for valid values",
            "label" : "Runtime Configuration",
            "type" : "entry",
            "property" : "runtimeConfig"
         },
         {
            "checkedValue" : "true",
            "value" : "false",
            "uncheckedValue" : "false",
            "initiallyChecked" : "0",
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, if checked, this will use the automatic deploy if that has been set up by the ISPW administrator, otherwise it defaults to not doing auto-deploy.",
            "type" : "checkbox",
            "label" : "Auto-Deploy",
            "property" : "autoDeploy"
         },
         {
            "required" : "0",
            "documentation" : "Optional, global custom headers used for all callbacks. Use \"Header=Value\" format.",
            "label" : "HTTP Headers in format: \"Header=Value\"",
            "type" : "textarea",
            "property" : "httpHeaders"
         },
         {
            "required" : "0",
            "documentation" : "Optional, global overide credentials used for all callbacks",
            "type" : "credential",
            "label" : "Global Credentials for Callbacks",
            "property" : "callbackCredential"
         },
         {
            "required" : "0",
            "expansionDeferred" : "true",
            "documentation" : "Optional, event callback array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).",
            "label" : "Event Callback Array for Asynchronous Callback",
            "type" : "textarea",
            "property" : "eventCallbacks"
         }
      ],
      "fields" : [
         "assignmentId",
         "level",
         "changeType",
         "executionStatus",
         "runtimeConfig",
         "autoDeploy",
         "httpHeaders",
         "callbackCredential",
         "eventCallbacks"
      ],
      "hasConfig" : "true",
      "basicAuth" : "false",
      "method" : "POST",
      "endpoint" : "#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/tasks/promote",
      "attachCredentials" : "true"
   },
   "Get release task list" : {
      "resultProperty" : {
         "show" : "true",
         "format" : [
            "json",
            "propertySheet"
         ],
         "default" : "/myJob/releaseTasks"
      },
      "name" : "Get Release Task List",
      "description" : "Retrieves the Task list for a Release.",
      "stepName" : "Get release task list",
      "bodyContentType" : "json",
      "canSkipAuth" : "true",
      "parameters" : [
         {
            "required" : "1",
            "documentation" : "Release ID",
            "label" : "Release ID",
            "type" : "entry",
            "property" : "releaseId"
         },
         {
            "required" : "0",
            "in" : "query",
            "documentation" : "Optional, level.",
            "label" : "Level",
            "type" : "entry",
            "property" : "level"
         }
      ],
      "fields" : [
         "releaseId",
         "level"
      ],
      "hasConfig" : "true",
      "basicAuth" : "false",
      "method" : "GET",
      "endpoint" : "#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}/tasks",
      "attachCredentials" : "true"
   },
   "Regress release" : {
      "resultProperty" : {
         "show" : "true",
         "format" : [
            "json",
            "propertySheet"
         ],
         "default" : "/myJob/regressResult"
      },
      "name" : "Regress Release",
      "description" : "Regresses a Release.",
      "stepName" : "Regress release",
      "bodyContentType" : "json",
      "canSkipAuth" : "false",
      "parameters" : [
         {
            "required" : "1",
            "documentation" : "Release ID",
            "label" : "Release ID",
            "type" : "entry",
            "property" : "releaseId"
         },
         {
            "required" : "1",
            "in" : "query",
            "documentation" : "Level.",
            "label" : "Level",
            "type" : "entry",
            "property" : "level"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, S for standard, I for incidental, or E for emergency. Default value of S",
            "option" : [
               {
                  "value" : "S",
                  "name" : "Standard (S)"
               },
               {
                  "value" : "I",
                  "name" : "Incidental (I)"
               },
               {
                  "value" : "E",
                  "name" : "Emergency (E)"
               }
            ],
            "label" : "Change Type",
            "type" : "select",
            "property" : "changeType"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I",
            "option" : [
               {
                  "value" : "I",
                  "name" : "Immediate (I)"
               },
               {
                  "value" : "H",
                  "name" : "Hold (H)"
               }
            ],
            "label" : "Execution Status",
            "type" : "select",
            "property" : "executionStatus"
         },
         {
            "required" : "1",
            "in" : "body",
            "documentation" : "Required, see ISPW administrator for valid values",
            "label" : "Runtime Configuration",
            "type" : "entry",
            "property" : "runtimeConfig"
         },
         {
            "checkedValue" : "true",
            "value" : "false",
            "uncheckedValue" : "false",
            "initiallyChecked" : "0",
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, if checked, this will use the automatic deploy if that has been set up by the ISPW administrator, otherwise it defaults to not doing auto-deploy.",
            "type" : "checkbox",
            "label" : "Auto-Deploy",
            "property" : "autoDeploy #### TODO Is this ignored?"
         },
         {
            "required" : "0",
            "documentation" : "Optional, global custom headers used for all callbacks. Use \"Header=Value\" format.",
            "label" : "HTTP Headers in format: \"Header=Value\"",
            "type" : "textarea",
            "property" : "httpHeaders"
         },
         {
            "required" : "0",
            "documentation" : "Optional, global overide credentials used for all callbacks",
            "type" : "credential",
            "label" : "Global Credentials for Callbacks",
            "property" : "callbackCredential"
         },
         {
            "required" : "0",
            "expansionDeferred" : "true",
            "documentation" : "Optional, event callback array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).",
            "label" : "Event Callback Array for Asynchronous Callback",
            "type" : "textarea",
            "property" : "eventCallbacks"
         }
      ],
      "fields" : [
         "releaseId",
         "level",
         "changeType",
         "executionStatus",
         "runtimeConfig",
         "autoDeploy #### TODO Is this ignored?",
         "httpHeaders",
         "callbackCredential",
         "eventCallbacks"
      ],
      "hasConfig" : "true",
      "basicAuth" : "false",
      "method" : "POST",
      "endpoint" : "#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}/tasks/regress",
      "attachCredentials" : "true"
   },
   "Get set task list" : {
      "resultProperty" : {
         "show" : "true",
         "format" : [
            "json",
            "propertySheet"
         ],
         "default" : "/myJob/setTasks"
      },
      "name" : "Get Set Task List",
      "description" : "Retrieves the Task list for a Set.",
      "stepName" : "Get set task list",
      "bodyContentType" : "json",
      "canSkipAuth" : "false",
      "parameters" : [
         {
            "required" : "1",
            "documentation" : "Set ID",
            "label" : "Set ID",
            "type" : "entry",
            "property" : "setId"
         }
      ],
      "fields" : [
         "setId"
      ],
      "hasConfig" : "true",
      "basicAuth" : "false",
      "method" : "GET",
      "endpoint" : "#{{instance}}/ispw/#{{srid}}/sets/#{setId}/tasks",
      "attachCredentials" : "true"
   },
   "Deploy release" : {
      "resultProperty" : {
         "show" : "true",
         "format" : [
            "json",
            "propertySheet"
         ],
         "default" : "/myJob/deployResult"
      },
      "name" : "Deploy Release",
      "description" : "Deploys a Release.",
      "stepName" : "Deploy release",
      "bodyContentType" : "json",
      "canSkipAuth" : "false",
      "parameters" : [
         {
            "required" : "1",
            "documentation" : "Release ID",
            "label" : "Release ID",
            "type" : "entry",
            "property" : "releaseId"
         },
         {
            "required" : "1",
            "in" : "query",
            "documentation" : "Level.",
            "label" : "Level",
            "type" : "entry",
            "property" : "level"
         },
         {
            "required" : "0",
            "value" : "S",
            "in" : "body",
            "documentation" : "Optional, S for standard, I for incidental, or E for emergency. Default value of S",
            "option" : [
               {
                  "value" : "S",
                  "name" : "Standard (S)"
               },
               {
                  "value" : "I",
                  "name" : "Incidental (I)"
               },
               {
                  "value" : "E",
                  "name" : "Emergency (E)"
               }
            ],
            "label" : "Change Type",
            "type" : "select",
            "property" : "changeType"
         },
         {
            "required" : "0",
            "value" : "I",
            "in" : "body",
            "documentation" : "Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I",
            "option" : [
               {
                  "value" : "I",
                  "name" : "Immediate (I)"
               },
               {
                  "value" : "H",
                  "name" : "Hold (H)"
               }
            ],
            "label" : "Execution Status",
            "type" : "select",
            "property" : "executionStatus"
         },
         {
            "required" : "1",
            "in" : "body",
            "documentation" : "Required, see ISPW administrator for valid values",
            "label" : "Runtime Configuration",
            "type" : "entry",
            "property" : "runtimeConfig"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, deploy active date.",
            "label" : "Deploy Active Date",
            "type" : "entry",
            "property" : "deployActiveDate"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, deploy active time.",
            "label" : "Deploy Active Time",
            "type" : "entry",
            "property" : "deployActiveTime"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, deploy implementation date.",
            "label" : "Deploy Implementation Date",
            "type" : "entry",
            "property" : "deployImplementationDate"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, deploy implementation time.",
            "label" : "Deploy Implementation Time",
            "type" : "entry",
            "property" : "deployImplementationTime"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, allows you to override the Environments configured for Deploy at that level. If you wish to Deploy to only certain Environments, you can list them here.",
            "label" : "Deploy Environment List",
            "type" : "entry",
            "property" : "dpenvlst"
         },
         {
            "required" : "0",
            "in" : "body",
            "documentation" : "Optional, allows you to specify a specific System for the Deploy.",
            "label" : "System",
            "type" : "entry",
            "property" : "system"
         },
         {
            "required" : "0",
            "documentation" : "Optional, global custom headers used for all callbacks. Use \"Header=Value\" format.",
            "label" : "HTTP Headers in format: \"Header=Value\"",
            "type" : "textarea",
            "property" : "httpHeaders"
         },
         {
            "required" : "0",
            "documentation" : "Optional, global overide credentials used for all callbacks",
            "type" : "credential",
            "label" : "Global Credentials for Callbacks",
            "property" : "callbackCredential"
         },
         {
            "required" : "0",
            "expansionDeferred" : "true",
            "documentation" : "Optional, event callback array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).",
            "label" : "Event Callback Array for Asynchronous Callback",
            "type" : "textarea",
            "property" : "eventCallbacks"
         }
      ],
      "fields" : [
         "releaseId",
         "level",
         "changeType",
         "executionStatus",
         "runtimeConfig",
         "deployActiveDate",
         "deployActiveTime",
         "deployImplementationDate",
         "deployImplementationTime",
         "dpenvlst",
         "system",
         "httpHeaders",
         "callbackCredential",
         "eventCallbacks"
      ],
      "hasConfig" : "true",
      "basicAuth" : "false",
      "method" : "POST",
      "endpoint" : "#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}/tasks/deploy",
      "attachCredentials" : "true"
   }
}
