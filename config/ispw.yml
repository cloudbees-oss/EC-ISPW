---
basicAuth: false # get credentials from config and add basic auth
options:
  noEmptyString: true
# This block refers to auto help generation
help:
  title: Electric Flow integration for Compuware ISPW
  description: Electric Flow integration for Compuware ISPW
  links:
    - http://www.compuware.com/en_us/use-cases/source-code-management.html
  hasConfig: true
  
procedures:
  - name: Create Assignment
    stepName: Create assignment
    description: Creates an Assignment.
    endpoint: '#{{instance}}/ispw/#{{srid}}/assignments'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: POST
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/createAssignment
    parameters:
      - property: stream
        type: entry
        label: Stream Name
        required: 1
        in: body
        documentation: Stream name.
      - property: application
        type: entry
        label: Application ID
        required: 1
        in: body
        documentation: ISPW Application Id.
      - property: defaultPath
        type: entry
        label: Default Path
        required: 1
        in: body
        documentation: Default Path.
      - property: description
        type: entry
        label: Description
        required: 1
        in: body
        documentation: Assignment Description.
      - property: _owner
        type: entry
        label: Owner
        required: 1
        in: body
        documentation: Owner.
      - property: assignmentPrefix
        type: entry
        label: Assignment Prefix
        required: 1
        in: body
        documentation: Assignment Prefix.
      - property: refNumber
        type: entry
        label: Ref Number
        required: 0
        in: body
        documentation: Ref Number.
      - property: release
        type: entry
        label: Release
        required: 0
        in: body
        documentation: Release.
      - property: userTag
        type: entry
        label: User Tag
        required: 0
        in: body
        documentation: User Tag.

  - name: Load Task
    stepName: Load task
    description: Loads a Task for the specified Assignment.
    endpoint: '#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/tasks'
    method: POST
    hasConfig: true
    attachCredentials: true
    basicAuth: false
    canSkipAuth: true
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/loadTask
    parameters:
      - property: assignmentId
        type: entry
        label: Assignment Id
        documentation: Assignment Id.
        required: 1
      - property: stream
        type: entry
        label: Stream Name
        required: 1
        in: body
        documentation: Stream name.
      - property: application
        type: entry
        label: Application ID
        required: 1
        in: body
        documentation: ISPW Application Id.
      - property: moduleName
        type: entry
        label: Module Name
        required: 1
        in: body
        documentation: Module name.
      - property: moduleType
        type: entry
        label: Module Type
        required: 1
        in: body
        documentation: Module Type.
      - property: currentLevel
        type: entry
        label: Current Level
        required: 1
        in: body
        documentation: Current Level.
      - property: startingLevel
        type: entry
        label: Starting Level
        required: 1
        in: body
        documentation: Starting Level.
      - property: generateSequence
        type: entry
        label: Generate Sequence
        required: 0
        in: body
        documentation: Generate Sequence.
      - property: sql
        type: entry
        label: SQL
        required: 0
        in: body
        documentation: SQL.
      - property: ims
        type: entry
        label: IMS
        required: 0
        in: body
        documentation: IMS.
      - property: cics
        type: entry
        label: CICS
        required: 0
        in: body
        documentation: CICS.
      - property: program
        type: entry
        label: Program
        required: 0
        in: body
        documentation: Program.
      - property: option1
        type: entry
        label: Option 1
        required: 0
        in: body
        documentation: Option 1.
      - property: option2
        type: entry
        label: Option 2
        required: 0
        in: body
        documentation: Option 2.
      - property: option3
        type: entry
        label: Option 3
        required: 0
        in: body
        documentation: Option 3.
      - property: option4
        type: entry
        label: Option 4
        required: 0
        in: body
        documentation: Option 4.
      - property: option5
        type: entry
        label: Option 5
        required: 0
        in: body
        documentation: Option 5.

  - name: Get Assignment Information
    stepName: Get assignment information
    description: Retrieves information about an Assignment.
    endpoint: '#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/'
    method: GET
    hasConfig: true
    attachCredentials: true
    basicAuth: false
    canSkipAuth: true
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/assignment
    parameters:
      - property: assignmentId
        type: entry
        label: Assignment Id
        required: 1
        documentation: Assignment Id.
        
  - name: Get Assignment Task List
    stepName: Get assignment task list
    description: Retrieves the Task list for an Assignment.
    endpoint: '#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/tasks'
    method: GET
    hasConfig: true
    attachCredentials: true
    basicAuth: false
    canSkipAuth: true
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/assignmentTasks
    parameters:
      - property: assignmentId
        type: entry
        label: Assignment Id
        documentation: Assignment Id.
        required: 1
      - property: level
        type: entry
        label: Level
        in: query
        required: 0
        documentation: Level.

  - name: Get Assignment Task Information
    stepName: Get assignment task information
    description: Retrieves information about a Task in an Assignment.
    endpoint: '#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/tasks/#{taskId}'
    method: GET
    hasConfig: true
    attachCredentials: true
    basicAuth: false
    canSkipAuth: true
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/assignmentTask
    parameters:
      - property: assignmentId
        type: entry
        label: Assignment Id
        documentation: Assignment Id.
        required: 1
      - property: taskId
        type: entry
        label: Task Id
        documentation: Task Id.
        required: 1

  - name: Generate Tasks in Assignment
    stepName: Generate tasks in assignment
    description: Runs generate for the Tasks in Assignment.
    endpoint: '#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/tasks/generations'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: POST
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/generateAssignmentTasks
    parameters:
      - property: assignmentId
        type: entry
        label: Assignment Id
        documentation: Assignment Id.
        required: 1
      - property: level
        type: entry
        label: Level
        documentation: Level.
        in: query
        required: 1
        noEmptyString: true
      - property: runtimeConfiguration
        type: entry
        label: Runtime Configuration
        required: 1
        in: body
        documentation: Required, see ISPW administrator for valid values.
      - property: httpHeaders
        type: textarea
        label: HTTP Headers in format: "Header=Value"
        required: 0
        documentation: Optional, global custom headers used for all callbacks. Use "Header=Value" format.
      - property: callbackCredential
        label: Global Credentials for Callbacks
        documentation: Optional, global overide credentials used for all callbacks
        required: 0
        type: credential
      - property: events
        type: textarea
        label: Event array in JSON format for asynchronous callback
        required: 0
        expansionDeferred: true
        documentation: Event array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).

  - name: Deploy Assignment
    stepName: Deploy assignment
    description: Deploys an Assignment.
    endpoint: '#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/tasks/deploy'
    #  #{{instance}} means that "instance" will be taken from config
    # #{assignmentId} will be taken from the procedure parameters
    method: POST
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/deployResult
    parameters:
      - property: assignmentId
        type: entry
        label: Assignment ID
        required: 1
        documentation: Assignment ID
      - property: level
        type: entry
        label: Level
        documentation: Level.
        in: query
        required: 1
      - property: changeType
        type: select
        in: body
        label: Change Type
        required: 0
        option:
          - name: Standard (S)
            value: S
          - name: Incidental (I)
            value: I
          - name: Emergency (E)
            value: E
        value: S
        documentation: Optional, S for standard, I for incidental, or E for emergency. Default value of S
      - property: executionStatus
        type: select
        in: body
        label: Execution Status
        required: 0
        option:
          - name: Immediate (I)
            value: I
          - name: Hold (H)
            value: H
        documentation: Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I
      - property: runtimeConfiguration
        type: entry
        in: body
        label: Runtime Configuration
        required: 1
        documentation: Required, see ISPW administrator for valid values
      - property: httpHeaders
        type: textarea
        label: HTTP Headers in format: "Header=Value"
        required: 0
        documentation: Optional, global custom headers used for all callbacks. Use "Header=Value" format.
      - property: callbackCredential
        label: Global Credentials for Callbacks
        documentation: Optional, global overide credentials used for all callbacks
        required: 0
        type: credential
      - property: events
        type: textarea
        label: Event array in JSON format for asynchronous callback
        required: 0
        expansionDeferred: true
        documentation: Event array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).

  - name: Promote Assignment
    stepName: Promote assignment
    description: Promotes an Assignment.
    endpoint: '#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/tasks/promote'
    #  #{{instance}} means that "instance" will be taken from config
    # #{assignmentId} will be taken from the procedure parameters
    method: POST
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/promoteResult
    parameters:
      - property: assignmentId
        type: entry
        label: Assignment ID
        required: 1
        documentation: Assignment ID
      - property: level
        type: entry
        label: Level
        documentation: Level.
        in: query
        required: 1
      - property: changeType
        type: select
        in: body
        label: Change Type
        required: 0
        option:
          - name: Standard (S)
            value: S
          - name: Incidental (I)
            value: I
          - name: Emergency (E)
            value: E
        value: S
        documentation: Optional, S for standard, I for incidental, or E for emergency. Default value of S
      - property: executionStatus
        type: select
        in: body
        label: Execution Status
        required: 0
        option:
          - name: Immediate (I)
            value: I
          - name: Hold (H)
            value: H
        documentation: Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I
      - property: runtimeConfiguration
        type: entry
        in: body
        label: Runtime Configuration
        required: 1
        documentation: Required, see ISPW administrator for valid values
      - property: httpHeaders
        type: textarea
        label: HTTP Headers in format: "Header=Value"
        required: 0
        documentation: Optional, global custom headers used for all callbacks. Use "Header=Value" format.
      - property: callbackCredential
        label: Global Credentials for Callbacks
        documentation: Optional, global overide credentials used for all callbacks
        required: 0
        type: credential
      - property: events
        type: textarea
        label: Event array in JSON format for asynchronous callback
        required: 0
        expansionDeferred: true
        documentation: Event array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).

  - name: Regress Assignment
    stepName: Regress assignment
    description: Regresses an Assignment.
    endpoint: '#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/tasks/regress'
    #  #{{instance}} means that "instance" will be taken from config
    # #{assignmentId} will be taken from the procedure parameters
    method: POST
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/promoteResult
    parameters:
      - property: assignmentId
        type: entry
        label: Assignment ID
        required: 1
        documentation: Assignment ID
      - property: level
        type: entry
        label: Level
        documentation: Level.
        in: query
        required: 1
      - property: changeType
        type: select
        in: body
        label: Change Type
        required: 0
        option:
          - name: Standard (S)
            value: S
          - name: Incidental (I)
            value: I
          - name: Emergency (E)
            value: E
        value: S
        documentation: Optional, S for standard, I for incidental, or E for emergency. Default value of S
      - property: executionStatus
        type: select
        in: body
        label: Execution Status
        required: 0
        option:
          - name: Immediate (I)
            value: I
          - name: Hold (H)
            value: H
        documentation: Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I
      - property: runtimeConfiguration
        type: entry
        in: body
        label: Runtime Configuration
        required: 1
        documentation: Required, see ISPW administrator for valid values
      - property: httpHeaders
        type: textarea
        label: HTTP Headers in format: "Header=Value"
        required: 0
        documentation: Optional, global custom headers used for all callbacks. Use "Header=Value" format.
      - property: callbackCredential
        label: Global Credentials for Callbacks
        documentation: Optional, global overide credentials used for all callbacks
        required: 0
        type: credential
      - property: events
        type: textarea
        label: Event array in JSON format for asynchronous callback
        required: 0
        expansionDeferred: true
        documentation: Event array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).

  - name: Create Release
    stepName: Create release
    description: Creates a Release.
    endpoint: '#{{instance}}/ispw/#{{srid}}/releases'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: POST
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/release
    parameters:
      - property: application
        type: entry
        label: Application
        required: 1
        in: body
        documentation: Application name for the release.
      - property: stream
        type: entry
        label: Stream
        required: 1
        in: body
        documentation: Stream name for the application.
      - property: description
        type: entry
        label: Description
        required: 1
        in: body
        documentation: Release description.
      - property: releaseId
        type: entry
        label: Release ID
        required: 0
        documentation: Can only be used if releasePrefix is not set, one must be used.
        in: body
      - property: releasePrefix
        type: entry
        label: Release Prefix
        required: 0
        in: body
        documentation: Can only be used if releaseId is not set, one must be used.
      - property: _owner
        type: entry
        label: Owner
        required: 0
        in: body
        documentation: Release owner.
      - property: referenceNumber
        type: entry
        label: Reference Number
        required: 0
        in: body
        documentation: Release reference number.

  - name: Get Release Task List
    stepName: Get release task list
    description: Retrieves the Task list for a Release.
    endpoint: '#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}/tasks'
    method: GET
    hasConfig: true
    attachCredentials: true
    basicAuth: false
    canSkipAuth: true
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/releaseTasks
    parameters:
      - property: releaseId
        type: entry
        label: Release ID
        required: 1
        documentation: Release ID
      - property: level
        type: entry
        label: Level
        in: query
        required: 0
        documentation: Level.

  - name: Get Release Task Information
    stepName: Get release task information
    description: Retrieves information about a Task in a Release.
    endpoint: '#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}/tasks/#{taskId}'
    method: GET
    hasConfig: true
    attachCredentials: true
    basicAuth: false
    canSkipAuth: true
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/releaseTask
    parameters:
      - property: releaseId
        type: entry
        label: Release ID
        required: 1
        documentation: Release ID
      - property: taskId
        type: entry
        label: Task Id
        documentation: Task Id.
        required: 1

  - name: Get Release Information
    stepName: Get release information
    description: Retrieves information about a Release.
    endpoint: '#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: GET
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/releaseInfo
    parameters:
      - property: releaseId
        type: entry
        label: Release ID
        required: 1
        documentation: Release ID.

  - name: Promote Release
    stepName: Promote release
    description: Promotes a Release.
    endpoint: '#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}/tasks/promote'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: POST
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/promoteResult
    parameters:
      - property: releaseId
        type: entry
        label: Release ID
        required: 1
        documentation: Release ID
      - property: level
        type: entry
        label: Level
        documentation: Release level.
        in: query
        required: 1
      - property: changeType
        type: select
        in: body
        label: Change Type
        required: 0
        option:
          - name: Standard (S)
            value: S
          - name: Incidental (I)
            value: I
          - name: Emergency (E)
            value: E
        value: S
        documentation: Optional, S for standard, I for incidental, or E for emergency. Default value of S
      - property: executionStatus
        type: select
        in: body
        label: Execution Status
        required: 0
        option:
          - name: Immediate (I)
            value: I
          - name: Hold (H)
            value: H
        documentation: Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I
      - property: runtimeConfiguration
        type: entry
        in: body
        label: Runtime Configuration
        required: 1
        documentation: Required, see ISPW administrator for valid values
      - property: httpHeaders
        type: textarea
        label: HTTP Headers in format: "Header=Value"
        required: 0
        documentation: Optional, global custom headers used for all callbacks. Use "Header=Value" format.
      - property: callbackCredential
        label: Global Credentials for Callbacks
        documentation: Optional, global overide credentials used for all callbacks
        required: 0
        type: credential
      - property: events
        type: textarea
        label: Event array in JSON format for asynchronous callback
        required: 0
        expansionDeferred: true
        documentation: Event array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).

  - name: Generate Tasks in Release
    stepName: Generate tasks in release
    description: Runs generate for the Tasks in Release.
    endpoint: '#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}/tasks/generate'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: POST
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/generateReleaseTasks
    parameters:
      - property: releaseId
        type: entry
        label: Release ID
        required: 1
        documentation: Release ID
      - property: level
        type: entry
        label: Level
        documentation: Level.
        in: query
        required: 1
        noEmptyString: true
      - property: runtimeConfiguration
        type: entry
        label: Runtime Configuration
        required: 1
        in: body
        documentation: Required, see ISPW administrator for valid values.
      - property: httpHeaders
        type: textarea
        label: HTTP Headers in format: "Header=Value"
        required: 0
        documentation: Optional, global custom headers used for all callbacks. Use "Header=Value" format.
      - property: callbackCredential
        label: Global Credentials for Callbacks
        documentation: Optional, global overide credentials used for all callbacks
        required: 0
        type: credential
      - property: events
        type: textarea
        label: Event array in JSON format for asynchronous callback
        required: 0
        expansionDeferred: true
        documentation: Event array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).

  - name: Get Release Task Generate Listing
    stepName: Get release task generate listing
    description: Retrieves a generate listing for a Task in a Release.
    endpoint: '#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}/tasks/#{taskId}/listing'
    method: GET
    hasConfig: true
    attachCredentials: true
    basicAuth: false
    canSkipAuth: true
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/releaseTaskGenerateListing
    parameters:
      - property: releaseId
        type: entry
        label: Release ID
        required: 1
        documentation: Release ID
      - property: taskId
        type: entry
        label: Task Id
        documentation: Task Id.
        required: 1

  - name: Deploy Release
    stepName: Deploy release
    description: Deploys a Release.
    endpoint: '#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}/tasks/deploy'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: POST
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/deployResult
    parameters:
      - property: releaseId
        type: entry
        label: Release ID
        required: 1
        documentation: Release ID
      - property: level
        type: entry
        label: Level
        documentation: Level.
        in: query
        required: 1
      - property: changeType
        type: select
        in: body
        label: Change Type
        required: 0
        option:
          - name: Standard (S)
            value: S
          - name: Incidental (I)
            value: I
          - name: Emergency (E)
            value: E
        value: S
        documentation: Optional, S for standard, I for incidental, or E for emergency. Default value of S
      - property: executionStatus
        type: select
        in: body
        label: Execution Status
        required: 0
        option:
          - name: Immediate (I)
            value: I
          - name: Hold (H)
            value: H
        value: I
        documentation: Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I
      - property: runtimeConfiguration
        type: entry
        in: body
        label: Runtime Configuration
        required: 1
        documentation: Required, see ISPW administrator for valid values
      - property: httpHeaders
        type: textarea
        label: HTTP Headers in format: "Header=Value"
        required: 0
        documentation: Optional, global custom headers used for all callbacks. Use "Header=Value" format.
      - property: callbackCredential
        label: Global Credentials for Callbacks
        documentation: Optional, global overide credentials used for all callbacks
        required: 0
        type: credential
      - property: events
        type: textarea
        label: Event array in JSON format for asynchronous callback
        required: 0
        expansionDeferred: true
        documentation: Event array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).

  - name: Regress Release
    stepName: Regress release
    description: Regresses a Release.
    endpoint: '#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}/tasks/regress'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: POST
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/regressResult
    parameters:
      - property: releaseId
        type: entry
        label: Release ID
        required: 1
        documentation: Release ID
      - property: level
        type: entry
        label: Level
        documentation: Level.
        in: query
        required: 1
      - property: changeType
        type: select
        in: body
        label: Change Type
        required: 0
        option:
          - name: Standard (S)
            value: S
          - name: Incidental (I)
            value: I
          - name: Emergency (E)
            value: E
        documentation: Optional, S for standard, I for incidental, or E for emergency. Default value of S
      - property: executionStatus
        type: select
        in: body
        label: Execution Status
        required: 0
        option:
          - name: Immediate (I)
            value: I
          - name: Hold (H)
            value: H
        documentation: Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I
      - property: runtimeConfiguration
        type: entry
        in: body
        label: Runtime Configuration
        required: 1
        documentation: Required, see ISPW administrator for valid values
      - property: httpHeaders
        type: textarea
        label: HTTP Headers in format: "Header=Value"
        required: 0
        documentation: Optional, global custom headers used for all callbacks. Use "Header=Value" format.
      - property: callbackCredential
        label: Global Credentials for Callbacks
        documentation: Optional, global overide credentials used for all callbacks
        required: 0
        type: credential
      - property: events
        type: textarea
        label: Event array in JSON format for asynchronous callback
        required: 0
        expansionDeferred: true
        documentation: Event array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).

  - name: Get Set Information
    stepName: Get set information
    description: Retrieves information about a Set.
    endpoint: '#{{instance}}/ispw/#{{srid}}/sets/#{setId}'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: GET
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/setInfo
    parameters:
      - property: setId
        type: entry
        label: Set ID
        required: 1
        documentation: Set ID

  - name: Get Set Task List
    stepName: Get set task list
    description: Retrieves the Task list for a Set.
    endpoint: '#{{instance}}/ispw/#{{srid}}/sets/#{setId}/tasks'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: GET
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/setTasks
    parameters:
      - property: setId
        type: entry
        label: Set ID
        required: 1
        documentation: Set ID

  - name: Get Set Deployment Information
    stepName: Get set deployment information
    description: Retrieves deployment information about a Set.
    endpoint: '#{{instance}}/ispw/#{{srid}}/sets/#{setId}/deployment'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: GET
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/setDeploymentInfo
    parameters:
      - property: setId
        type: entry
        label: Set ID
        required: 1
        documentation: Set ID

  - name: Fallback Set
    stepName: Fallback set
    description: Fallbacks a Set from a previous deployment.
    endpoint: '#{{instance}}/ispw/#{{srid}}/sets/#{setId}/tasks/fallback'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: GET
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/setDeploymentInfo
    parameters:
      - property: setId
        type: entry
        label: Set ID
        required: 1
        documentation: Set ID
      - property: changeType
        type: select
        in: body
        label: Change Type
        required: 0
        option:
          - name: Standard (S)
            value: S
          - name: Incidental (I)
            value: I
          - name: Emergency (E)
            value: E
        value: S
        documentation: Optional, S for standard, I for incidental, or E for emergency. Default value of S
      - property: executionStatus
        type: select
        in: body
        label: Execution Status
        required: 0
        option:
          - name: Immediate (I)
            value: I
          - name: Hold (H)
            value: H
        documentation: Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I
      - property: runtimeConfiguration
        type: entry
        in: body
        label: Runtime Configuration
        required: 1
        documentation: Required, see ISPW administrator for valid values
      - property: httpHeaders
        type: textarea
        label: HTTP Headers in format: "Header=Value"
        required: 0
        documentation: Optional, global custom headers used for all callbacks. Use "Header=Value" format.
      - property: callbackCredential
        label: Global Credentials for Callbacks
        documentation: Optional, global overide credentials used for all callbacks
        required: 0
        type: credential
      - property: events
        type: textarea
        label: Event array in JSON format for asynchronous callback
        required: 0
        expansionDeferred: true
        documentation: Event array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).
