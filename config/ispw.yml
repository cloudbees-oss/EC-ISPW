---
basicAuth: false # get credentials from config and add basic auth
options:
  noEmptyString: true
# This block refers to auto help generation
help:
  title: Electric Flow integration for Compuware ISPW
  description: Electric Flow integration for Compuware ISPW
  links:
    - http://www.compuware.com/en_us/use-cases/source-code-management.html
  hasConfig: true

procedures:
  - name: Create Assignment
    stepName: Create assignment
    description: Creates an Assignment.
    endpoint: '#{{instance}}/ispw/#{{srid}}/assignments'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: POST
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/createAssignment
    parameters:
      - property: stream
        type: entry
        label: Stream Name
        required: 1
        in: body
        documentation: Stream name.
      - property: application
        type: entry
        label: Application ID
        required: 1
        in: body
        documentation: ISPW Application Id.
      - property: defaultPath
        type: entry
        label: Default Path
        required: 1
        in: body
        documentation: Default Path.
      - property: description
        type: entry
        label: Description
        required: 1
        in: body
        documentation: Assignment description.
      - property: _owner
        type: entry
        label: Owner
        required: 1
        in: body
        documentation: Owner.
      - property: assignmentPrefix
        type: entry
        label: Assignment Prefix
        required: 1
        in: body
        documentation: Assignment prefix.
      - property: refNumber
        type: entry
        label: Ref Number
        required: 0
        in: body
        documentation: Optional, ref number.
      - property: release
        type: entry
        label: Release
        required: 0
        in: body
        documentation: Optional, release.
      - property: userTag
        type: entry
        label: User Tag
        required: 0
        in: body
        documentation: Optional, user tag.

  - name: Load Task
    stepName: Load task
    description: Loads a Task for the specified Assignment.
    endpoint: '#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/tasks'
    method: POST
    hasConfig: true
    attachCredentials: true
    basicAuth: false
    canSkipAuth: true
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/loadTask
    parameters:
      - property: assignmentId
        type: entry
        label: Assignment Id
        documentation: Assignment id.
        required: 1
      - property: stream
        type: entry
        label: Stream Name
        required: 1
        in: body
        documentation: Stream name.
      - property: application
        type: entry
        label: Application ID
        required: 1
        in: body
        documentation: ISPW application id.
      - property: moduleName
        type: entry
        label: Module Name
        required: 1
        in: body
        documentation: Module name.
      - property: moduleType
        type: entry
        label: Module Type
        required: 1
        in: body
        documentation: Module type.
      - property: currentLevel
        type: entry
        label: Current Level
        required: 1
        in: body
        documentation: Current level.
      - property: startingLevel
        type: entry
        label: Starting Level
        required: 1
        in: body
        documentation: Starting level.
      - property: generateSequence
        type: entry
        label: Generate Sequence
        required: 0
        in: body
        documentation: Optional, generate sequence.
      - property: sql
        type: checkbox
        label: SQL
        required: 0
        checkedValue: true
        uncheckedValue: false
        initiallyChecked: 0
        value: false
        in: body
        documentation: Optional, SQL.
      - property: ims
        type: checkbox
        label: IMS
        required: 0
        checkedValue: true
        uncheckedValue: false
        initiallyChecked: 0
        value: false
        in: body
        documentation: Optional, IMS.
      - property: cics
        type: checkbox
        label: CICS
        required: 0
        checkedValue: true
        uncheckedValue: false
        initiallyChecked: 0
        value: false
        in: body
        documentation: Optional, CICS.
      - property: program
        type: checkbox
        label: Program
        required: 0
        checkedValue: true
        uncheckedValue: false
        initiallyChecked: 0
        value: false
        in: body
        documentation: Optional, program.
      - property: option1
        type: entry
        label: Option 1
        required: 0
        in: body
        documentation: Optional, option 1.
      - property: option2
        type: entry
        label: Option 2
        required: 0
        in: body
        documentation: Optional, option 2.
      - property: option3
        type: entry
        label: Option 3
        required: 0
        in: body
        documentation: Optional, Option 3.
      - property: option4
        type: entry
        label: Option 4
        required: 0
        in: body
        documentation: Optional, option 4.
      - property: option5
        type: entry
        label: Option 5
        required: 0
        in: body
        documentation: Optional, option 5.
      - property: action
        type: entry
        label: Action
        required: 0
        in: body
        documentation: Optional, action.
      - property: alternateName
        type: entry
        label: Alternate Name
        required: 0
        in: body
        documentation: Optional, alternate name.
      - property: baseVersion
        type: entry
        label: Base Version
        required: 0
        in: body
        documentation: Optional, base version.
      - property: internalVersion
        type: entry
        label: Internal Version
        required: 0
        in: body
        documentation: Optional, internal version.
      - property: replaceVersion
        type: entry
        label: Replace Version
        required: 0
        in: body
        documentation: Optional, replace version.
      - property: version
        type: entry
        label: Version
        required: 0
        in: body
        documentation: Optional, version.
      - property: clazz
        type: entry
        label: Clazz
        required: 0
        in: body
        documentation: Optional, clazz.
      - property: container
        type: entry
        label: Container
        required: 0
        in: body
        documentation: Optional, container.
      - property: dateTime
        type: entry
        label: Date-Time
        required: 0
        in: body
        documentation: Optional, date-time.
      - property: environment
        type: entry
        label: Environment
        required: 0
        in: body
        documentation: Optional, environment.
      - property: extension
        type: entry
        label: Extension
        required: 0
        in: body
        documentation: Optional, extension.
      - property: flags
        type: entry
        label: Flags
        required: 0
        in: body
        documentation: Optional, flags.
      - property: level
        type: entry
        label: Level
        required: 0
        in: body
        documentation: Optional, level.
      - property: message
        type: entry
        label: Message
        required: 0
        in: body
        documentation: Optional, message.
      - property: operation
        type: entry
        label: Operation
        required: 0
        in: body
        documentation: Optional, operation.
      - property: release
        type: entry
        label: Release
        required: 0
        in: body
        documentation: Optional, release.
      - property: set
        type: entry
        label: Set
        required: 0
        in: body
        documentation: Optional, set.
      - property: status
        type: entry
        label: Status
        required: 0
        in: body
        documentation: Optional, status.
      - property: taskId
        type: entry
        label: Task Id
        required: 0
        in: body
        documentation: Optional, taskId.
      - property: url
        type: entry
        label: URL
        required: 0
        in: body
        documentation: Optional, URL.
      - property: userId
        type: entry
        label: User Id
        required: 0
        in: body
        documentation: Optional, use id.

  - name: Get Assignment Information
    stepName: Get assignment information
    description: Retrieves information about an Assignment.
    endpoint: '#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/'
    method: GET
    hasConfig: true
    attachCredentials: true
    basicAuth: false
    canSkipAuth: true
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/assignment
    parameters:
      - property: assignmentId
        type: entry
        label: Assignment Id
        required: 1
        documentation: Assignment Id.

  - name: Get Assignment Task List
    stepName: Get assignment task list
    description: Retrieves the Task list for an Assignment.
    endpoint: '#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/tasks'
    method: GET
    hasConfig: true
    attachCredentials: true
    basicAuth: false
    canSkipAuth: true
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/assignmentTasks
    parameters:
      - property: assignmentId
        type: entry
        label: Assignment Id
        documentation: Assignment Id.
        required: 1
      - property: level
        type: entry
        label: Level
        in: query
        required: 0
        documentation: Optional, level.

  - name: Get Assignment Task Information
    stepName: Get assignment task information
    description: Retrieves information about a Task in an Assignment.
    endpoint: '#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/tasks/#{taskId}'
    method: GET
    hasConfig: true
    attachCredentials: true
    basicAuth: false
    canSkipAuth: true
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/assignmentTask
    parameters:
      - property: assignmentId
        type: entry
        label: Assignment Id
        documentation: Assignment Id.
        required: 1
      - property: taskId
        type: entry
        label: Task Id
        documentation: Task Id.
        required: 1

  - name: Generate Tasks in Assignment
    stepName: Generate tasks in assignment
    description: Runs generate for the Tasks in Assignment.
    endpoint: '#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/tasks/generate'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: POST
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/generateAssignmentTasks
    parameters:
      - property: assignmentId
        type: entry
        label: Assignment Id
        documentation: Assignment Id.
        required: 1
      - property: level
        type: entry
        label: Level
        documentation: Level.
        in: query
        required: 1
        noEmptyString: true
      - property: changeType
        #### TODO Is this ignored?
        type: select
        in: body
        label: Change Type
        required: 0
        option:
          - name: Standard (S)
            value: S
          - name: Incidental (I)
            value: I
          - name: Emergency (E)
            value: E
        value: S
        documentation: Optional, S for standard, I for incidental, or E for emergency. Default value of S
      - property: execStat #### TODO Is this ignored?
        type: select
        in: body
        label: Execution Status
        required: 0
        option:
          - name: Immediate (I)
            value: I
          - name: Hold (H)
            value: H
        documentation: Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I
      - property: runtimeConfig
        type: entry
        label: Runtime Config
        required: 1
        in: body
        documentation: Required, see ISPW administrator for valid values.
      - property: autoDeploy
        type: checkbox
        label: Auto-Deploy
        required: 0
        checkedValue: true
        uncheckedValue: false
        initiallyChecked: 0
        value: false
        in: body
        documentation: Optional, if checked, this will use the automatic deploy if that has been set up by the ISPW administrator, otherwise it defaults to not doing auto-deploy.
#### TODO Do we need deployActiveDate, deployActiveTime, deployImplementationDate, deployImplementationTime, dpenvlst, system -- or are they ignored?
#      - property: deployActiveDate
#        type: entry
#        in: body
#        label: Deploy Active Date
#        required: 0
#        documentation: Optional, deploy active date.
#      - property: deployActiveTime
#        type: entry
#        in: body
#        label: Deploy Active Time
#        required: 0
#        documentation: Optional, deploy active time.
#      - property: deployImplementationDate
#        type: entry
#        in: body
#        label: Deploy Implementation Date
#        required: 0
#        documentation: Optional, deploy implementation date.
#      - property: deployImplementationTime
#        type: entry
#        in: body
#        label: Deploy Implementation Time
#        required: 0
#        documentation: Optional, deploy implementation time.
#      - property: dpenvlst
#        type: entry
#        in: body
#        label: Deploy Environment List
#        required: 0
#        documentation: Optional, allows you to override the Environments configured for Deploy at that level. If you wish to Deploy to only certain Environments, you can list them here.
#      - property: system
#        type: entry
#        in: body
#        label: System
#        required: 0
#        documentation: Optional, allows you to specify a specific System for the Deploy.
      - property: httpHeaders
        type: textarea
        label: HTTP Headers in format: "Header=Value"
        required: 0
        documentation: Optional, global custom headers used for all callbacks. Use "Header=Value" format.
      - property: callbackCredential
        label: Global Credentials for Callbacks
        required: 0
        type: credential
        documentation: Optional, global overide credentials used for all callbacks
      - property: eventCallbacks
        type: textarea
        label: Event Callback Array for Asynchronous Callback
        required: 0
        expansionDeferred: true
        documentation: Optional, event callback array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).

  - name: Promote Assignment
    stepName: Promote assignment
    description: Promotes an Assignment.
    endpoint: '#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/tasks/promote'
    #  #{{instance}} means that "instance" will be taken from config
    # #{assignmentId} will be taken from the procedure parameters
    method: POST
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/promoteResult
    parameters:
      - property: assignmentId
        type: entry
        label: Assignment ID
        required: 1
        documentation: Assignment ID
      - property: level
        type: entry
        label: Level
        documentation: Level.
        in: query
        required: 1
      - property: changeType
        type: select
        in: body
        label: Change Type
        required: 0
        option:
          - name: Standard (S)
            value: S
          - name: Incidental (I)
            value: I
          - name: Emergency (E)
            value: E
        value: S
        documentation: Optional, S for standard, I for incidental, or E for emergency. Default value of S
      - property: executionStatus
        type: select
        in: body
        label: Execution Status
        required: 0
        option:
          - name: Immediate (I)
            value: I
          - name: Hold (H)
            value: H
        documentation: Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I
      - property: runtimeConfig
        type: entry
        in: body
        label: Runtime Configuration
        required: 1
        documentation: Required, see ISPW administrator for valid values
      - property: autoDeploy
        type: checkbox
        label: Auto-Deploy
        required: 0
        checkedValue: true
        uncheckedValue: false
        initiallyChecked: 0
        value: false
        in: body
        documentation: Optional, if checked, this will use the automatic deploy if that has been set up by the ISPW administrator, otherwise it defaults to not doing auto-deploy.
#### TODO Do we need deployActiveDate, deployActiveTime, deployImplementationDate, deployImplementationTime, dpenvlst, system -- or are they ignored?
#      - property: deployActiveDate #### TODO Is this ignored?
#        type: entry
#        in: body
#        label: Deploy Active Date
#        required: 0
#        documentation: Optional, deploy active date.
#      - property: deployActiveTime #### TODO Is this ignored?
#        type: entry
#        in: body
#        label: Deploy Active Time
#        required: 0
#        documentation: Optional, deploy active time.
#      - property: deployImplementationDate #### TODO Is this ignored?
#        type: entry
#        in: body
#        label: Deploy Implementation Date
#        required: 0
#        documentation: Optional, deploy implementation date.
#      - property: deployImplementationTime #### TODO Is this ignored?
#        type: entry
#        in: body
#        label: Deploy Implementation Time
#        required: 0
#        documentation: Optional, deploy implementation time.
#      - property: dpenvlst #### TODO Is this ignored?
#        type: entry
#        in: body
#        label: Deploy Environment List
#        required: 0
#        documentation: Optional, allows you to override the Environments configured for Deploy at that level. If you wish to Deploy to only certain Environments, you can list them here.
#      - property: system #### TODO Is this ignored?
#        type: entry
#        in: body
#        label: System
#        required: 0
#        documentation: Optional, allows you to specify a specific System for the Deploy.
      - property: httpHeaders
        type: textarea
        label: HTTP Headers in format: "Header=Value"
        required: 0
        documentation: Optional, global custom headers used for all callbacks. Use "Header=Value" format.
      - property: callbackCredential
        label: Global Credentials for Callbacks
        required: 0
        type: credential
        documentation: Optional, global overide credentials used for all callbacks
      - property: eventCallbacks
        type: textarea
        label: Event Callback Array for Asynchronous Callback
        required: 0
        expansionDeferred: true
        documentation: Optional, event callback array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).

  - name: Deploy Assignment
    stepName: Deploy assignment
    description: Deploys an Assignment.
    endpoint: '#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/tasks/deploy'
    #  #{{instance}} means that "instance" will be taken from config
    # #{assignmentId} will be taken from the procedure parameters
    method: POST
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/deployResult
    parameters:
      - property: assignmentId
        type: entry
        label: Assignment ID
        required: 1
        documentation: Assignment ID
      - property: level
        type: entry
        label: Level
        documentation: Level.
        in: query
        required: 1
      - property: changeType
        type: select
        in: body
        label: Change Type
        required: 0
        option:
          - name: Standard (S)
            value: S
          - name: Incidental (I)
            value: I
          - name: Emergency (E)
            value: E
        value: S
        documentation: Optional, S for standard, I for incidental, or E for emergency. Default value of S
      - property: executionStatus
        type: select
        in: body
        label: Execution Status
        required: 0
        option:
          - name: Immediate (I)
            value: I
          - name: Hold (H)
            value: H
        documentation: Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I
      - property: runtimeConfig
        type: entry
        in: body
        label: Runtime Configuration
        required: 1
        documentation: Required, see ISPW administrator for valid values
#      - property: autoDeploy #### TODO Is this ignored? If not, what does it do?
#        type: checkbox
#        label: Auto-Deploy
#        required: 0
#        checkedValue: true
#        uncheckedValue: false
#        initiallyChecked: 0
#        value: false
#        in: body
#        documentation: Optional, if checked, this will use the automatic deploy if that has been set up by the ISPW administrator, otherwise it defaults to not doing auto-deploy.
      - property: deployActiveDate
        type: entry
        in: body
        label: Deploy Active Date
        required: 0
        documentation: Optional, deploy active date.
      - property: deployActiveTime
        type: entry
        in: body
        label: Deploy Active Time
        required: 0
        documentation: Optional, deploy active time.
      - property: deployImplementationDate
        type: entry
        in: body
        label: Deploy Implementation Date
        required: 0
        documentation: Optional, deploy implementation date.
      - property: deployImplementationTime
        type: entry
        in: body
        label: Deploy Implementation Time
        required: 0
        documentation: Optional, deploy implementation time.
      - property: dpenvlst
        type: entry
        in: body
        label: Deploy Environment List
        required: 0
        documentation: Optional, allows you to override the Environments configured for Deploy at that level. If you wish to Deploy to only certain Environments, you can list them here.
      - property: system
        type: entry
        in: body
        label: System
        required: 0
        documentation: Optional, allows you to specify a specific System for the Deploy.
      - property: httpHeaders
        type: textarea
        label: HTTP Headers in format: "Header=Value"
        required: 0
        documentation: Optional, global custom headers used for all callbacks. Use "Header=Value" format.
      - property: callbackCredential
        label: Global Credentials for Callbacks
        required: 0
        type: credential
        documentation: Optional, global overide credentials used for all callbacks
      - property: eventCallbacks
        type: textarea
        label: Event Callback Array for Asynchronous Callback
        required: 0
        expansionDeferred: true
        documentation: Optional, event callback array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).

#  - name: Regress Assignment
#    stepName: Regress assignment
#    description: Regresses an Assignment.
#    endpoint: '#{{instance}}/ispw/#{{srid}}/assignments/#{assignmentId}/tasks/regress'
#    #  #{{instance}} means that "instance" will be taken from config
#    # #{assignmentId} will be taken from the procedure parameters
#    method: POST
#    # HTTP method
#    hasConfig: true
#     # a field for configuration name will be added to the form
#    attachCredentials: true
#     # credentials will be attached to the procedure
#    basicAuth: false
#     # credentials will be turned into basic auth header
#    canSkipAuth: false
#     # if no credentials found, the procedure won't fail, the request will be made without credentials
#    bodyContentType: json
#    # request body will be json-encoded and header Content-Type: application/json will be added
#    resultProperty:
#      show: true
#      format:
#        - json
#        - propertySheet
#      default: /myJob/promoteResult
#    parameters:
#      - property: assignmentId
#        type: entry
#        label: Assignment ID
#        required: 1
#        documentation: Assignment ID
#      - property: level
#        type: entry
#        label: Level
#        documentation: Level.
#        in: query
#        required: 1
#      - property: changeType
#        type: select
#        in: body
#        label: Change Type
#        required: 0
#        option:
#          - name: Standard (S)
#            value: S
#          - name: Incidental (I)
#            value: I
#          - name: Emergency (E)
#            value: E
#        value: S
#        documentation: Optional, S for standard, I for incidental, or E for emergency. Default value of S
#      - property: executionStatus
#        type: select
#        in: body
#        label: Execution Status
#        required: 0
#        option:
#          - name: Immediate (I)
#            value: I
#          - name: Hold (H)
#            value: H
#        documentation: Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I
#      - property: runtimeConfig
#        type: entry
#        in: body
#        label: Runtime Configuration
#        required: 1
#        documentation: Required, see ISPW administrator for valid values
#      - property: autoDeploy #### TODO Is this ignored? If not, what does it do?
#        type: checkbox
#        label: Auto-Deploy
#        required: 0
#        checkedValue: true
#        uncheckedValue: false
#        initiallyChecked: 0
#        value: false
#        in: body
#        documentation: Optional, if checked, this will use the automatic deploy if that has been set up by the ISPW administrator, otherwise it defaults to not doing auto-deploy.
#      - property: deployActiveDate #### TODO Is this ignored?
#        type: entry
#        in: body
#        label: Deploy Active Date
#        required: 0
#        documentation: Optional, deploy active date.
#      - property: deployActiveTime #### TODO Is this ignored?
#        type: entry
#        in: body
#        label: Deploy Active Time
#        required: 0
#        documentation: Optional, deploy active time.
#      - property: deployImplementationDate #### TODO Is this ignored?
#        type: entry
#        in: body
#        label: Deploy Implementation Date
#        required: 0
#        documentation: Optional, deploy implementation date.
#      - property: deployImplementationTime #### TODO Is this ignored?
#        type: entry
#        in: body
#        label: Deploy Implementation Time
#        required: 0
#        documentation: Optional, deploy implementation time.
#      - property: dpenvlst #### TODO Is this ignored?
#        type: entry
#        in: body
#        label: Deploy Environment List
#        required: 0
#        documentation: Optional, allows you to override the Environments configured for Deploy at that level. If you wish to Deploy to only certain Environments, you can list them here.
#      - property: system #### TODO Is this ignored?
#        type: entry
#        in: body
#        label: System
#        required: 0
#        documentation: Optional, allows you to specify a specific System for the Deploy.
#      - property: httpHeaders
#        type: textarea
#        label: HTTP Headers in format: "Header=Value"
#        required: 0
#        documentation: Optional, global custom headers used for all callbacks. Use "Header=Value" format.
#      - property: callbackCredential
#        label: Global Credentials for Callbacks
#        documentation: Optional, global overide credentials used for all callbacks
#        required: 0
#        type: credential
#      - property: eventCallbacks
#        type: textarea
#        label: Event Callback Array for Asynchronous Callback
#        required: 0
#        expansionDeferred: true
#        documentation: Optional, event callback array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).

  - name: Create Release
    stepName: Create release
    description: Creates a Release.
    endpoint: '#{{instance}}/ispw/#{{srid}}/releases'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: POST
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/release
    parameters:
      - property: application
        type: entry
        label: Application
        required: 1
        in: body
        documentation: Application name for the release.
      - property: stream
        type: entry
        label: Stream
        required: 1 #### TODO Is this optional?
        in: body
        documentation: Stream name for the application.
      - property: description
        type: entry
        label: Description
        required: 1
        in: body
        documentation: Release description.
      - property: releaseId
        type: entry
        label: Release ID
        required: 0
        documentation: Optional, can only be used if releasePrefix is not set, one must be used. #### TODO Is this still optional?
        in: body
#      - property: releasePrefix #### TODO Did this go away?
#        type: entry
#        label: Release Prefix
#        required: 0
#        in: body
#        documentation: Optional, can only be used if releaseId is not set, one must be used.
      - property: releasePreference #### TODO If this a typo in the documentation for releasePrefix?
        type: entry
        label: Release Preference
        required: 0
        in: body
        documentation: Oprional, ? #### TODO
      - property: _owner
        type: entry
        label: Owner
        required: 0
        in: body
        documentation: Optional, owner.
      - property: workRefNumber
        type: entry
        label: Work Reference Number
        required: 0
        in: body
        documentation: Optional, work reference number.
      - property: message
        type: entry
        label: Message
        required: 0
        in: body
        documentation: Optional, message.
      - property: userTag
        type: entry
        label: User Tag
        required: 0
        in: body
        documentation: Optional, user tag.

  - name: Get Release Task List
    stepName: Get release task list
    description: Retrieves the Task list for a Release.
    endpoint: '#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}/tasks'
    method: GET
    hasConfig: true
    attachCredentials: true
    basicAuth: false
    canSkipAuth: true
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/releaseTasks
    parameters:
      - property: releaseId
        type: entry
        label: Release ID
        required: 1
        documentation: Release ID
      - property: level
        type: entry
        label: Level
        in: query
        required: 0
        documentation: Optional, level.

  - name: Get Release Task Information
    stepName: Get release task information
    description: Retrieves information about a Task in a Release.
    endpoint: '#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}/tasks/#{taskId}'
    method: GET
    hasConfig: true
    attachCredentials: true
    basicAuth: false
    canSkipAuth: true
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/releaseTask
    parameters:
      - property: releaseId
        type: entry
        label: Release ID
        required: 1
        documentation: Release ID
      - property: taskId
        type: entry
        label: Task Id
        documentation: Task Id.
        required: 1

  - name: Get Release Information
    stepName: Get release information
    description: Retrieves information about a Release.
    endpoint: '#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: GET
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/releaseInfo
    parameters:
      - property: releaseId
        type: entry
        label: Release ID
        required: 1
        documentation: Release ID.

  - name: Generate Tasks in Release
    stepName: Generate tasks in release
    description: Runs generate for the Tasks in Release.
    endpoint: '#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}/tasks/generate'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: POST
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/generateReleaseTasks
    parameters:
      - property: releaseId
        type: entry
        label: Release ID
        required: 1
        documentation: Release ID
      - property: level
        type: entry
        label: Level
        documentation: Level.
        in: query
        required: 1
        noEmptyString: true
      - property: changeType #### TODO Is this ignored?
        type: select
        in: body
        label: Change Type
        required: 0
        option:
          - name: Standard (S)
            value: S
          - name: Incidental (I)
            value: I
          - name: Emergency (E)
            value: E
        value: S
        documentation: Optional, S for standard, I for incidental, or E for emergency. Default value of S
      - property: execStat #### TODO Is this ignored?
        type: select
        in: body
        label: Execution Status
        required: 0
        option:
          - name: Immediate (I)
            value: I
          - name: Hold (H)
            value: H
        documentation: Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I
      - property: runtimeConfig
        type: entry
        label: Runtime Configuration
        required: 1
        in: body
        documentation: Required, see ISPW administrator for valid values.
#### TODO Do we need autoDeploy, deployActiveDate, deployActiveTime, deployImplementationDate, deployImplementationTime, dpenvlst, system -- or are they ignored?
#      - property: autoDeploy #### TODO Is this ignored?
#        type: checkbox
#        label: Auto-Deploy
#        required: 0
#        checkedValue: true
#        uncheckedValue: false
#        initiallyChecked: 0
#        value: false
#        in: body
#        documentation: Optional, if checked, this will use the automatic deploy if that has been set up by the ISPW administrator, otherwise it defaults to not doing auto-deploy.
#      - property: deployActiveDate
#        type: entry
#        in: body
#        label: Deploy Active Date
#        required: 0
#        documentation: Optional, deploy active date.
#      - property: deployActiveTime
#        type: entry
#        in: body
#        label: Deploy Active Time
#        required: 0
#        documentation: Optional, deploy active time.
#      - property: deployImplementationDate
#        type: entry
#        in: body
#        label: Deploy Implementation Date
#        required: 0
#        documentation: Optional, deploy implementation date.
#      - property: deployImplementationTime
#        type: entry
#        in: body
#        label: Deploy Implementation Time
#        required: 0
#        documentation: Optional, deploy implementation time.
#      - property: dpenvlst
#        type: entry
#        in: body
#        label: Deploy Environment List
#        required: 0
#        documentation: Optional, allows you to override the Environments configured for Deploy at that level. If you wish to Deploy to only certain Environments, you can list them here.
#      - property: system
#        type: entry
#        in: body
#        label: System
#        required: 0
#        documentation: Optional, allows you to specify a specific System for the Deploy.
      - property: httpHeaders
        type: textarea
        label: HTTP Headers in format: "Header=Value"
        required: 0
        documentation: Optional, global custom headers used for all callbacks. Use "Header=Value" format.
      - property: callbackCredential
        label: Global Credentials for Callbacks
        required: 0
        type: credential
        documentation: Optional, global overide credentials used for all callbacks
      - property: eventCallbacks
        type: textarea
        label: Event Callback Array for Asynchronous Callback
        required: 0
        expansionDeferred: true
        documentation: Optional, event callback array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).

#  - name: Get Release Task Generate Listing
#    stepName: Get release task generate listing
#    description: Retrieves a generate listing for a Task in a Release.
#    endpoint: '#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}/tasks/#{taskId}/listing'
#    method: GET
#    hasConfig: true
#    attachCredentials: true
#    basicAuth: false
#    canSkipAuth: true
#    bodyContentType: json
#    # request body will be json-encoded and header Content-Type: application/json will be added
#    resultProperty:
#      show: true
#      format:
#        - json
#        - propertySheet
#      default: /myJob/releaseTaskGenerateListing
#    parameters:
#      - property: releaseId
#        type: entry
#        label: Release ID
#        required: 1
#        documentation: Release ID
#      - property: taskId
#        type: entry
#        label: Task Id
#        documentation: Task Id.
#        required: 1

  - name: Promote Release
    stepName: Promote release
    description: Promotes a Release.
    endpoint: '#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}/tasks/promote'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: POST
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/promoteResult
    parameters:
      - property: releaseId
        type: entry
        label: Release ID
        required: 1
        documentation: Release ID
      - property: level
        type: entry
        label: Level
        documentation: Release level.
        in: query
        required: 1
      - property: changeType
        type: select
        in: body
        label: Change Type
        required: 0
        option:
          - name: Standard (S)
            value: S
          - name: Incidental (I)
            value: I
          - name: Emergency (E)
            value: E
        value: S
        documentation: Optional, S for standard, I for incidental, or E for emergency. Default value of S
      - property: executionStatus
        type: select
        in: body
        label: Execution Status
        required: 0
        option:
          - name: Immediate (I)
            value: I
          - name: Hold (H)
            value: H
        documentation: Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I
      - property: runtimeConfig
        type: entry
        in: body
        label: Runtime Configuration
        required: 1
        documentation: Required, see ISPW administrator for valid values
      - property: autoDeploy
        type: checkbox
        label: Auto-Deploy
        required: 0
        checkedValue: true
        uncheckedValue: false
        initiallyChecked: 0
        value: false
        in: body
        documentation: Optional, if checked, this will use the automatic deploy if that has been set up by the ISPW administrator, otherwise it defaults to not doing auto-deploy.
#### TODO Do we need deployActiveDate, deployActiveTime, deployImplementationDate, deployImplementationTime, dpenvlst, system -- or are they ignored?
#      - property: deployActiveDate
#        type: entry
#        in: body
#        label: Deploy Active Date
#        required: 0
#        documentation: Optional, deploy active date.
#      - property: deployActiveTime
#        type: entry
#        in: body
#        label: Deploy Active Time
#        required: 0
#        documentation: Optional, deploy active time.
#      - property: deployImplementationDate
#        type: entry
#        in: body
#        label: Deploy Implementation Date
#        required: 0
#        documentation: Optional, deploy implementation date.
#      - property: deployImplementationTime
#        type: entry
#        in: body
#        label: Deploy Implementation Time
#        required: 0
#        documentation: Optional, deploy implementation time.
#      - property: dpenvlst
#        type: entry
#        in: body
#        label: Deploy Environment List
#        required: 0
#        documentation: Optional, allows you to override the Environments configured for Deploy at that level. If you wish to Deploy to only certain Environments, you can list them here.
#      - property: system
#        type: entry
#        in: body
#        label: System
#        required: 0
#        documentation: Optional, allows you to specify a specific System for the Deploy.
      - property: httpHeaders
        type: textarea
        label: HTTP Headers in format: "Header=Value"
        required: 0
        documentation: Optional, global custom headers used for all callbacks. Use "Header=Value" format.
      - property: callbackCredential
        label: Global Credentials for Callbacks
        required: 0
        type: credential
        documentation: Optional, global overide credentials used for all callbacks
      - property: eventCallbacks
        type: textarea
        label: Event Callback Array for Asynchronous Callback
        required: 0
        expansionDeferred: true
        documentation: Optional, event callback array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).

  - name: Deploy Release
    stepName: Deploy release
    description: Deploys a Release.
    endpoint: '#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}/tasks/deploy'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: POST
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/deployResult
    parameters:
      - property: releaseId
        type: entry
        label: Release ID
        required: 1
        documentation: Release ID
      - property: level
        type: entry
        label: Level
        documentation: Level.
        in: query
        required: 1
      - property: changeType
        type: select
        in: body
        label: Change Type
        required: 0
        option:
          - name: Standard (S)
            value: S
          - name: Incidental (I)
            value: I
          - name: Emergency (E)
            value: E
        value: S
        documentation: Optional, S for standard, I for incidental, or E for emergency. Default value of S
      - property: executionStatus
        type: select
        in: body
        label: Execution Status
        required: 0
        option:
          - name: Immediate (I)
            value: I
          - name: Hold (H)
            value: H
        value: I
        documentation: Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I
      - property: runtimeConfig
        type: entry
        in: body
        label: Runtime Configuration
        required: 1
        documentation: Required, see ISPW administrator for valid values
#      - property: autoDeploy #### TODO Is this ignored? If not, what does it do?
#        type: checkbox
#        label: Auto-Deploy
#        required: 0
#        checkedValue: true
#        uncheckedValue: false
#        initiallyChecked: 0
#        value: false
#        in: body
#        documentation: Optional, if checked, this will use the automatic deploy if that has been set up by the ISPW administrator, otherwise it defaults to not doing auto-deploy.
      - property: deployActiveDate
        type: entry
        in: body
        label: Deploy Active Date
        required: 0
        documentation: Optional, deploy active date.
      - property: deployActiveTime
        type: entry
        in: body
        label: Deploy Active Time
        required: 0
        documentation: Optional, deploy active time.
      - property: deployImplementationDate
        type: entry
        in: body
        label: Deploy Implementation Date
        required: 0
        documentation: Optional, deploy implementation date.
      - property: deployImplementationTime
        type: entry
        in: body
        label: Deploy Implementation Time
        required: 0
        documentation: Optional, deploy implementation time.
      - property: dpenvlst
        type: entry
        in: body
        label: Deploy Environment List
        required: 0
        documentation: Optional, allows you to override the Environments configured for Deploy at that level. If you wish to Deploy to only certain Environments, you can list them here.
      - property: system
        type: entry
        in: body
        label: System
        required: 0
        documentation: Optional, allows you to specify a specific System for the Deploy.
      - property: httpHeaders
        type: textarea
        label: HTTP Headers in format: "Header=Value"
        required: 0
        documentation: Optional, global custom headers used for all callbacks. Use "Header=Value" format.
      - property: callbackCredential
        label: Global Credentials for Callbacks
        required: 0
        type: credential
        documentation: Optional, global overide credentials used for all callbacks
      - property: eventCallbacks
        type: textarea
        label: Event Callback Array for Asynchronous Callback
        required: 0
        expansionDeferred: true
        documentation: Optional, event callback array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).

  - name: Regress Release
    stepName: Regress release
    description: Regresses a Release.
    endpoint: '#{{instance}}/ispw/#{{srid}}/releases/#{releaseId}/tasks/regress'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: POST
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/regressResult
    parameters:
      - property: releaseId
        type: entry
        label: Release ID
        required: 1
        documentation: Release ID
      - property: level
        type: entry
        label: Level
        documentation: Level.
        in: query
        required: 1
      - property: changeType
        type: select
        in: body
        label: Change Type
        required: 0
        option:
          - name: Standard (S)
            value: S
          - name: Incidental (I)
            value: I
          - name: Emergency (E)
            value: E
        documentation: Optional, S for standard, I for incidental, or E for emergency. Default value of S
      - property: executionStatus
        type: select
        in: body
        label: Execution Status
        required: 0
        option:
          - name: Immediate (I)
            value: I
          - name: Hold (H)
            value: H
        documentation: Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I
      - property: runtimeConfig
        type: entry
        in: body
        label: Runtime Configuration
        required: 1
        documentation: Required, see ISPW administrator for valid values
      - property: autoDeploy #### TODO Is this ignored?
        type: checkbox
        label: Auto-Deploy
        required: 0
        checkedValue: true
        uncheckedValue: false
        initiallyChecked: 0
        value: false
        in: body
        documentation: Optional, if checked, this will use the automatic deploy if that has been set up by the ISPW administrator, otherwise it defaults to not doing auto-deploy.
#### TODO Do we need deployActiveDate, deployActiveTime, deployImplementationDate, deployImplementationTime, dpenvlst, system -- or are they ignored?
#      - property: deployActiveDate
#        type: entry
#        in: body
#        label: Deploy Active Date
#        required: 0
#        documentation: Optional, deploy active date.
#      - property: deployActiveTime
#        type: entry
#        in: body
#        label: Deploy Active Time
#        required: 0
#        documentation: Optional, deploy active time.
#      - property: deployImplementationDate
#        type: entry
#        in: body
#        label: Deploy Implementation Date
#        required: 0
#        documentation: Optional, deploy implementation date.
#      - property: deployImplementationTime
#        type: entry
#        in: body
#        label: Deploy Implementation Time
#        required: 0
#        documentation: Optional, deploy implementation time.
#      - property: dpenvlst
#        type: entry
#        in: body
#        label: Deploy Environment List
#        required: 0
#        documentation: Optional, allows you to override the Environments configured for Deploy at that level. If you wish to Deploy to only certain Environments, you can list them here.
#      - property: system
#        type: entry
#        in: body
#        label: System
#        required: 0
#        documentation: Optional, allows you to specify a specific System for the Deploy.
      - property: httpHeaders
        type: textarea
        label: HTTP Headers in format: "Header=Value"
        required: 0
        documentation: Optional, global custom headers used for all callbacks. Use "Header=Value" format.
      - property: callbackCredential
        label: Global Credentials for Callbacks
        required: 0
        type: credential
        documentation: Optional, global overide credentials used for all callbacks
      - property: eventCallbacks
        type: textarea
        label: Event Callback Array for Asynchronous Callback
        required: 0
        expansionDeferred: true
        documentation: Optional, event callback array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).

  - name: Get Set Information
    stepName: Get set information
    description: Retrieves information about a Set.
    endpoint: '#{{instance}}/ispw/#{{srid}}/sets/#{setId}'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: GET
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/setInfo
    parameters:
      - property: setId
        type: entry
        label: Set ID
        required: 1
        documentation: Set ID

  - name: Get Set Task List
    stepName: Get set task list
    description: Retrieves the Task list for a Set.
    endpoint: '#{{instance}}/ispw/#{{srid}}/sets/#{setId}/tasks'
    #  #{{instance}} means that "instance" will be taken from config
    # #{repository} will be taken from the procedure parameters
    method: GET
    # HTTP method
    hasConfig: true
     # a field for configuration name will be added to the form
    attachCredentials: true
     # credentials will be attached to the procedure
    basicAuth: false
     # credentials will be turned into basic auth header
    canSkipAuth: false
     # if no credentials found, the procedure won't fail, the request will be made without credentials
    bodyContentType: json
    # request body will be json-encoded and header Content-Type: application/json will be added
    resultProperty:
      show: true
      format:
        - json
        - propertySheet
      default: /myJob/setTasks
    parameters:
      - property: setId
        type: entry
        label: Set ID
        required: 1
        documentation: Set ID

#  - name: Get Set Deployment Information
#    stepName: Get set deployment information
#    description: Retrieves deployment information about a Set.
#    endpoint: '#{{instance}}/ispw/#{{srid}}/sets/#{setId}/deployment'
#    #  #{{instance}} means that "instance" will be taken from config
#    # #{repository} will be taken from the procedure parameters
#    method: GET
#    # HTTP method
#    hasConfig: true
#     # a field for configuration name will be added to the form
#    attachCredentials: true
#     # credentials will be attached to the procedure
#    basicAuth: false
#     # credentials will be turned into basic auth header
#    canSkipAuth: false
#     # if no credentials found, the procedure won't fail, the request will be made without credentials
#    bodyContentType: json
#    # request body will be json-encoded and header Content-Type: application/json will be added
#    resultProperty:
#      show: true
#      format:
#        - json
#        - propertySheet
#      default: /myJob/setDeploymentInfo
#    parameters:
#      - property: setId
#        type: entry
#        label: Set ID
#        required: 1
#        documentation: Set ID

#  - name: Fallback Set
#    stepName: Fallback set
#    description: Fallbacks a Set from a previous deployment.
#    endpoint: '#{{instance}}/ispw/#{{srid}}/sets/#{setId}/tasks/fallback'
#    #  #{{instance}} means that "instance" will be taken from config
#    # #{repository} will be taken from the procedure parameters
#    method: GET
#    # HTTP method
#    hasConfig: true
#     # a field for configuration name will be added to the form
#    attachCredentials: true
#     # credentials will be attached to the procedure
#    basicAuth: false
#     # credentials will be turned into basic auth header
#    canSkipAuth: false
#     # if no credentials found, the procedure won't fail, the request will be made without credentials
#    bodyContentType: json
#    # request body will be json-encoded and header Content-Type: application/json will be added
#    resultProperty:
#      show: true
#      format:
#        - json
#        - propertySheet
#      default: /myJob/setDeploymentInfo
#    parameters:
#      - property: setId
#        type: entry
#        label: Set ID
#        required: 1
#        documentation: Set ID
#      - property: changeType
#        type: select
#        in: body
#        label: Change Type
#        required: 0
#        option:
#          - name: Standard (S)
#            value: S
#          - name: Incidental (I)
#            value: I
#          - name: Emergency (E)
#            value: E
#        value: S
#        documentation: Optional, S for standard, I for incidental, or E for emergency. Default value of S
#      - property: executionStatus
#        type: select
#        in: body
#        label: Execution Status
#        required: 0
#        option:
#          - name: Immediate (I)
#            value: I
#          - name: Hold (H)
#            value: H
#        documentation: Optional, I for immediate execution or at start date/time, H to create request in hold. Default is I
#      - property: runtimeConfig
#        type: entry
#        in: body
#        label: Runtime Configuration
#        required: 1
#        documentation: Required, see ISPW administrator for valid values
#### TODO Do we need autoDeploy, deployActiveDate, deployActiveTime, deployImplementationDate, deployImplementationTime, dpenvlst, system -- or are they ignored?
#      - property: autoDeploy #### TODO Is this ignored?
#        type: checkbox
#        label: Auto-Deploy
#        required: 0
#        checkedValue: true
#        uncheckedValue: false
#        initiallyChecked: 0
#        value: false
#        in: body
#        documentation: Optional, if checked, this will use the automatic deploy if that has been set up by the ISPW administrator, otherwise it defaults to not doing auto-deploy.
#      - property: deployActiveDate #### TODO Is this ignored?
#        type: entry
#        in: body
#        label: Deploy Active Date
#        required: 0
#        documentation: Optional, deploy active date.
#      - property: deployActiveTime #### TODO Is this ignored?
#        type: entry
#        in: body
#        label: Deploy Active Time
#        required: 0
#        documentation: Optional, deploy active time.
#      - property: deployImplementationDate #### TODO Is this ignored?
#        type: entry
#        in: body
#        label: Deploy Implementation Date
#        required: 0
#        documentation: Optional, deploy implementation date.
#      - property: deployImplementationTime #### TODO Is this ignored?
#        type: entry
#        in: body
#        label: Deploy Implementation Time
#        required: 0
#        documentation: Optional, deploy implementation time.
#      - property: dpenvlst #### TODO Is this ignored?
#        type: entry
#        in: body
#        label: Deploy Environment List
#        required: 0
#        documentation: Optional, allows you to override the Environments configured for Deploy at that level. If you wish to Deploy to only certain Environments, you can list them here.
#      - property: system #### TODO Is this ignored?
#        type: entry
#        in: body
#        label: System
#        required: 0
#        documentation: Optional, allows you to specify a specific System for the Deploy.
#      - property: httpHeaders
#        type: textarea
#        label: HTTP Headers in format: "Header=Value"
#        required: 0
#        documentation: Optional, global custom headers used for all callbacks. Use "Header=Value" format.
#      - property: callbackCredential
#        label: Global Credentials for Callbacks
#        required: 0
#        type: credential
#        documentation: Optional, global overide credentials used for all callbacks
#      - property: eventCallbacks
#        type: textarea
#        label: Event Callback Array for Asynchronous Callback
#        required: 0
#        expansionDeferred: true
#        documentation: Optional, event callback array, should contain at least 1 member. Uses JSON format, described in Compuware ISPW REST API Guide. Useful values can be found in /plugins/EC-ISPW/project/ec_callback_job etc. If this parameter is left empty, the plugin procedure will handle the callback itself, and the procedure call will then be synchronous: it won't return until a callback is received (or it times out).
